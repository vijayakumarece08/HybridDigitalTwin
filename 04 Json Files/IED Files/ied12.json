[
    {
        "id": "dd712c2f38ed0ae2",
        "type": "tab",
        "label": "Matlab to Feeder 10",
        "disabled": false,
        "info": ""
    },
    {
        "id": "73cc1669a0e6beaf",
        "type": "tab",
        "label": "Feeder 10 IED CB Decision",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5e9a73ca71568bd9",
        "type": "tab",
        "label": "Feeder 10 IED2 Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "057cf6507b4baaec",
        "type": "tab",
        "label": "Database F10 IED12 IN",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3f64f611b7c8edf0",
        "type": "tab",
        "label": "Database F10 IED12 OUT",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9deb54e5d9507e03",
        "type": "tab",
        "label": "Feeder 10 IED to Scada",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9ccccc39dda3d283",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "14d8de8b997f2ec1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.124",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "true",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ae9c8dc6d1502d78",
        "type": "mqtt-broker",
        "name": "Heroku Cloud",
        "broker": "driver.cloudmqtt.com",
        "port": "18833",
        "tls": "",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "6000",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5c5942ea931769a4",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5083f39bcbe85ce2",
        "type": "ui_group",
        "name": "home",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "39cde05b7b06c279",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "94b5b908f32a5b75",
        "type": "mqtt-broker",
        "name": "Testing MQTT broker",
        "broker": "172.20.10.14",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "973b8cadb8cb600f",
        "type": "mqtt-broker",
        "name": "thingspeak",
        "broker": "mqtt.thingspeak.com",
        "port": "1883",
        "clientid": "MSwRNSEaIQwaDD0rMBQxFxc",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "6000",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "df5fcabcdf90f5c2",
        "type": "mqtt-broker",
        "name": "",
        "broker": "tcp://driver.cloudmqtt.com:18833",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "9a8cf9f3aad20fd0",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.54",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "1417e997505d94f7",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.103",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "87f7b4a814c890ee",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "localhost",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "cae64e8ea5aebe26",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.103",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "9c6c8e281f4bc262",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.115",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "736605727cb2472f",
        "type": "modbus-client",
        "name": "rasppi",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.104",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "e7c5e320b3ae9889",
        "type": "ui_group",
        "name": "MGC Control Panel",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "25e612f13f37156a",
        "type": "ui_group",
        "name": "Values",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4c94a9c8e8ae50b5",
        "type": "ui_group",
        "name": "Status",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5107818e1afb5752",
        "type": "ui_group",
        "name": "Values",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "cfaf0d06fa9d605b",
        "type": "ui_group",
        "name": "Status",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "cd2c2e1bfc5bdba4",
        "type": "ui_group",
        "name": "Values",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4c52c444ab5f4aa6",
        "type": "ui_group",
        "name": "Status",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "69e084a946b5f237",
        "type": "ui_group",
        "name": "Control",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c37ee53440aa271c",
        "type": "ui_group",
        "name": "Control",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7cdb3554ca1ce2f5",
        "type": "ui_group",
        "name": "Event Recording",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": true
    },
    {
        "id": "6fb87ec148fee0e9",
        "type": "ui_group",
        "name": "IED",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "b36cf72476434133",
        "type": "ui_group",
        "name": "HT-SP-Q01",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "e77fd73639e0d265",
        "type": "ui_group",
        "name": "HT-SS1-Q01A",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "a7f7905dcd34c5b1",
        "type": "ui_group",
        "name": "HT-SS1-Q01B",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "6ff40a6e3c462722",
        "type": "ui_group",
        "name": "HT-SS1-Q02",
        "tab": "",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "4d4dacecd5cb29b7",
        "type": "ui_group",
        "name": "LT-MGB-Q01A",
        "tab": "",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "0c7f0c736398a357",
        "type": "ui_group",
        "name": "LT-MGB-Q01B",
        "tab": "",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "2ab620d7e2eb7510",
        "type": "ui_group",
        "name": "LT-MGB-Q02",
        "tab": "",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "9b3af04d67f26af2",
        "type": "ui_group",
        "name": "LT-MGB-Q03",
        "tab": "",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "45879199eac4fd03",
        "type": "ui_group",
        "name": "LT-MGB-Q04",
        "tab": "",
        "order": 11,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "f1f52bcd6c092a5d",
        "type": "ui_group",
        "name": "WDB1-Q01A",
        "tab": "",
        "order": 12,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "2af8777460ffd976",
        "type": "ui_group",
        "name": "WDB1-Q01B",
        "tab": "",
        "order": 13,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "4c2e69cc1ad6b6f2",
        "type": "ui_group",
        "name": "HT-SP-Q01",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "de1756ef5307ee4f",
        "type": "ui_group",
        "name": "HT-SS1-Q01A",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "44921eb353e9ade3",
        "type": "ui_group",
        "name": "HT-SS1-Q01B",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "e4c76750f7f482c1",
        "type": "ui_group",
        "name": "LT-MGB-Q01A",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "7105060fbeffae14",
        "type": "ui_group",
        "name": "LT-MGB-Q01B",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "830732421d733f8a",
        "type": "ui_group",
        "name": "LT-MGB-Q02",
        "tab": "",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "c703f1395c088353",
        "type": "ui_group",
        "name": "LT-MGB-Q04",
        "tab": "",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "4a99d088aeee9de3",
        "type": "ui_group",
        "name": "DI1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a589af5849a86924",
        "type": "ui_group",
        "name": "DI 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c118c96ef61bf8d9",
        "type": "ui_group",
        "name": " ",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "19",
        "collapse": false
    },
    {
        "id": "6f422b369d877915",
        "type": "ui_group",
        "name": "",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "250e6dcf9e542f7d",
        "type": "ui_group",
        "name": "",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "aa9b9d18d63e243b",
        "type": "ui_group",
        "name": "SLD",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 26,
        "collapse": false
    },
    {
        "id": "74edbc200c9b6c7d",
        "type": "ui_group",
        "name": "Graphics",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "7878500bb92d446f",
        "type": "ui_group",
        "name": "Controls",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "9ae3ac83d82acec5",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "abde8212059986a2",
        "type": "ui_group",
        "name": "SLD",
        "tab": "307bf661.b180da",
        "order": 1,
        "disp": false,
        "width": 19,
        "collapse": false
    },
    {
        "id": "a7a36a275986cdee",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "307bf661.b180da",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "206c268fb298a664",
        "type": "mqtt-broker",
        "name": "",
        "broker": "ec2-13-251-128-198.ap-southeast-1.compute.amazonaws.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "233e6fd9bc5775b9",
        "type": "ui_group",
        "name": "Group 5",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": 6
    },
    {
        "id": "e251cbf41e7ff9e5",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "5baa62a576fadbee",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": 6
    },
    {
        "id": "cf3c3195fb9b52af",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.106",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "f5af241f1f299d0f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "tcp://driver.cloudmqtt.com:18833",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "4413d38a16067bb0",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.103",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "43b4dc7173094d8f",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "0ce77c09c4c9fef7",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.54",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "7d2cdd5fdd62ef4d",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.104",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "3c3fd8ce75497814",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.122",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "92879d2a7b297796",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": true
    },
    {
        "id": "d8ddafee94e9337a",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.106",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "61b77b254474bd31",
        "type": "ui_group",
        "name": "IED 12",
        "tab": "1dabec7e4989af2d",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e4553422fb4ca140",
        "type": "ui_group",
        "name": "Event Recording",
        "tab": "1dabec7e4989af2d",
        "order": 1,
        "disp": true,
        "width": "14",
        "collapse": true,
        "className": ""
    },
    {
        "id": "1dabec7e4989af2d",
        "type": "ui_tab",
        "name": "Meters",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8310dbcc215ede95",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.115",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ed66e92d349b53f3",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.117",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "3c657f8775108a87",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.118",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8489a60449e4f478",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.116",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a34994cafbbf257b",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.119",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ad237c0ba7c2df2b",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.120",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "3f631d171e7a7e5a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.121",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "dc8e0784382f54fe",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.122",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "214295a81cf06395",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.123",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5b2a5c6be5302215",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.113",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "68977b9e0cd330ec",
        "type": "modbus-client",
        "name": "PyModbus Server",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.200",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "afac0270e3ff0d6c",
        "type": "ui_group",
        "name": "Database F10 IED12 IN",
        "tab": "7dfc50f0c0c8bacc",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "40877a552e161a09",
        "type": "sqlitedb",
        "db": "/tmp/pi_f10_ied12",
        "mode": "RWC"
    },
    {
        "id": "cc56352a26624647",
        "type": "ui_group",
        "name": "Sensors",
        "tab": "94e3c0ff281080e2",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "841f2a2e254a62b5",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.124",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "fc83619cebaccbc8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.123",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "9f8be700b6710408",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.122",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "0bbcb99eeb546185",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.121",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c73ea7c602ec1d79",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.120",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "3b83800e88ab3586",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.119",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8c28855a446f8009",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.116",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "63e4c0bf540a02a2",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.118",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "9234dbf911e60213",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.115",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "9a22e7087608c69a",
        "type": "ui_group",
        "name": "Read Result",
        "tab": "5603057ab1ac93f8",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b8132e77e67cc318",
        "type": "sqlitedb",
        "db": "/tmp/sqlite2",
        "mode": "RWC"
    },
    {
        "id": "d9e40e27b3d0c796",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.114",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7dfc50f0c0c8bacc",
        "type": "ui_tab",
        "name": "Database F10 IED12 IN",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "94e3c0ff281080e2",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 4,
        "disabled": true,
        "hidden": true
    },
    {
        "id": "5603057ab1ac93f8",
        "type": "ui_tab",
        "name": "Database F10 IED12 OUT",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "07b997caed39f50d",
        "type": "modbus-client",
        "name": "PyModbus Server",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.104",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "4ea5b7ffb9e54bd1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.123",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5e17c9e1048204ca",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.122",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "9046f50b017d2643",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.121",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "300de81ae2256938",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.120",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "dd8dbfb12716d71c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.119",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "e8a71093d6b91a2d",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.116",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "bd4f64ac8ad2b546",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.118",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d324cb11f425af5c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.117",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ba33892edcfb0e0a",
        "type": "modbus-client",
        "name": "PyModbus Server",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.200",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "835daa70d5e3b6c9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.123",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "e916f5ea9ec1c767",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.122",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "df808db933c7f3e3",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.121",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d35108e3a8da7a9e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.120",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "671ef33f7857d188",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.119",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "e7c55afaf4ef1251",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.116",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "45e9e906b5a02422",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.118",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "612c3039c04a8799",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.117",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "928012c9667198db",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.114",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c1a8618aba676dc0",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.104",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "986292a01c91c3b9",
        "type": "ui_group",
        "name": "IED 12 CB Manual Control",
        "tab": "1dabec7e4989af2d",
        "order": 3,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "08c01ff48ebf7262",
        "type": "modbus-client",
        "name": "PyModbus Server",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.200",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "a8cf692cc3033ec1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.115",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c780804574035f33",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.124",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b75c2e5d44c8c685",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.123",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "6f3d438ec2dfc7bb",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.122",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "3abdb6fbc2437e51",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.121",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c1a3a17b7fb52573",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.120",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "28dd6d951f6889f1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.119",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a9109174f89c9db7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.116",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "64d2a851e3b6ce54",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.118",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "39ca2212f01664f2",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.117",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "1eeb011ae76e9462",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "global.set('voltage1', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ea7d2e0b730b9dc1",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "var obtainV = global.get(\"voltage1\");\nmsg.payload = obtainV;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 180,
        "wires": [
            [
                "d40d438dd3d8f2b4"
            ]
        ]
    },
    {
        "id": "d40d438dd3d8f2b4",
        "type": "debug",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 180,
        "wires": []
    },
    {
        "id": "081b5df49ddf98f2",
        "type": "inject",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 180,
        "wires": [
            [
                "ea7d2e0b730b9dc1"
            ]
        ]
    },
    {
        "id": "028d3846122b1a6f",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "global.set('voltage2', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "64db73628c86bfa5",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "var obtainV2 = global.get(\"voltage2\");\nmsg.payload = obtainV2;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "b8111cc270563223"
            ]
        ]
    },
    {
        "id": "b8111cc270563223",
        "type": "debug",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 240,
        "wires": []
    },
    {
        "id": "ff586c7e1e68aad7",
        "type": "inject",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 240,
        "wires": [
            [
                "64db73628c86bfa5"
            ]
        ]
    },
    {
        "id": "f68f5068bc548d6a",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "global.set('voltage3', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "9abed48463de8c41",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "var obtainV3 = global.get(\"voltage3\");\nmsg.payload = obtainV3;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 300,
        "wires": [
            [
                "f1bbd1b15a364598"
            ]
        ]
    },
    {
        "id": "f1bbd1b15a364598",
        "type": "debug",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 300,
        "wires": []
    },
    {
        "id": "3592636787e2e359",
        "type": "inject",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 300,
        "wires": [
            [
                "9abed48463de8c41"
            ]
        ]
    },
    {
        "id": "ff21063d3090fb0e",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "global.set('current1', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "afeb5564932caba6",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "var obtainI = global.get(\"current1\");\nmsg.payload = obtainI;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 360,
        "wires": [
            [
                "99914137d6741488"
            ]
        ]
    },
    {
        "id": "99914137d6741488",
        "type": "debug",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 360,
        "wires": []
    },
    {
        "id": "ad5af43e096e8b54",
        "type": "inject",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 360,
        "wires": [
            [
                "afeb5564932caba6"
            ]
        ]
    },
    {
        "id": "2ba631eba51c1a70",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "global.set('current2', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "b08cdd6f3a76523d",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "var obtainI2 = global.get(\"current2\");\nmsg.payload = obtainI2;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 420,
        "wires": [
            [
                "aea78d6f3ad7b11b"
            ]
        ]
    },
    {
        "id": "aea78d6f3ad7b11b",
        "type": "debug",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 420,
        "wires": []
    },
    {
        "id": "e2dfc2375d86f26c",
        "type": "inject",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 420,
        "wires": [
            [
                "b08cdd6f3a76523d"
            ]
        ]
    },
    {
        "id": "d3967a40093bfa43",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "global.set('current3', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "9538f7e92b4e1495",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "var obtainI3 = global.get(\"current3\");\nmsg.payload = obtainI3;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 480,
        "wires": [
            [
                "147c0d986105fca7"
            ]
        ]
    },
    {
        "id": "147c0d986105fca7",
        "type": "debug",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 480,
        "wires": []
    },
    {
        "id": "01889afc1eb4a256",
        "type": "inject",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 480,
        "wires": [
            [
                "9538f7e92b4e1495"
            ]
        ]
    },
    {
        "id": "46ba112b3bedacc6",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "global.set('Frequency', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "2a607ffc1fdf92b3",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "var obtainF = global.get(\"Frequency\");\nmsg.payload = obtainF;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 540,
        "wires": [
            [
                "66e5993b47709480"
            ]
        ]
    },
    {
        "id": "66e5993b47709480",
        "type": "debug",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 540,
        "wires": []
    },
    {
        "id": "3b5f72759acc3d59",
        "type": "inject",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 540,
        "wires": [
            [
                "2a607ffc1fdf92b3"
            ]
        ]
    },
    {
        "id": "10a717503e055f65",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "global.set('voltageN', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "7503b2a7b5e2fb05",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "var obtainVn = global.get(\"voltageN\");\nmsg.payload = obtainVn;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 600,
        "wires": [
            [
                "5fd568bad088e582"
            ]
        ]
    },
    {
        "id": "5fd568bad088e582",
        "type": "debug",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 600,
        "wires": []
    },
    {
        "id": "65469a4cb9b20174",
        "type": "inject",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 600,
        "wires": [
            [
                "7503b2a7b5e2fb05"
            ]
        ]
    },
    {
        "id": "99d23024ba1ce575",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "global.set('currentN', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "76b9c6800169d4bf",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "var obtainIn = global.get(\"currentN\");\nmsg.payload = obtainIn;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 660,
        "wires": [
            [
                "50df74504ee70522"
            ]
        ]
    },
    {
        "id": "50df74504ee70522",
        "type": "debug",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 660,
        "wires": []
    },
    {
        "id": "6c11f0d91e7daeb9",
        "type": "inject",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 660,
        "wires": [
            [
                "76b9c6800169d4bf"
            ]
        ]
    },
    {
        "id": "86e5b5ef882a7349",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "global.set('f10_load', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "4058f1774ec1673b",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "func": "var obtain_load = global.get(\"f10_load\");\nmsg.payload = obtain_load;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 720,
        "wires": [
            [
                "e76911eda4a7eefa"
            ]
        ]
    },
    {
        "id": "e76911eda4a7eefa",
        "type": "debug",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 720,
        "wires": []
    },
    {
        "id": "b7b095bd22416f24",
        "type": "inject",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 720,
        "wires": [
            [
                "4058f1774ec1673b"
            ]
        ]
    },
    {
        "id": "af2b46761233700f",
        "type": "inject",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 730,
        "y": 780,
        "wires": [
            [
                "7d9bbc6acb55a554"
            ]
        ]
    },
    {
        "id": "7d9bbc6acb55a554",
        "type": "function",
        "z": "dd712c2f38ed0ae2",
        "name": "Calculating Load",
        "func": "var obtainI = global.get(\"current1\");\nvar obtainI2 = global.get(\"current2\");\nvar obtainI3 = global.get(\"current3\");\nvar obtainL = global.get(\"f10_load\");\n\nvar f10_current1 = obtainI*(obtainL/45);\nvar f10_current2 = obtainI2*(obtainL/45);\nvar f10_current3 = obtainI3*(obtainL/45);\n\nglobal.set('f10_current1', String(f10_current1))\nglobal.set('f10_current2', String(f10_current2))\nglobal.set('f10_current3', String(f10_current3))\n\nmsg.payload = f10_current2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 780,
        "wires": [
            [
                "a35d49a63bf2f14b"
            ]
        ]
    },
    {
        "id": "a35d49a63bf2f14b",
        "type": "debug",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 780,
        "wires": []
    },
    {
        "id": "a51fca4dde1526d0",
        "type": "mqtt in",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "topic": "Matlab_to_IED12/vphase1",
        "qos": "2",
        "datatype": "auto",
        "broker": "c780804574035f33",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 180,
        "wires": [
            [
                "1eeb011ae76e9462"
            ]
        ]
    },
    {
        "id": "9b7f1a535a043f7e",
        "type": "mqtt in",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "topic": "Matlab_to_IED12/iphase2",
        "qos": "2",
        "datatype": "auto",
        "broker": "c1a3a17b7fb52573",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 420,
        "wires": [
            [
                "2ba631eba51c1a70"
            ]
        ]
    },
    {
        "id": "bc79dde132632951",
        "type": "mqtt in",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "topic": "Matlab_to_IED12/vphase2",
        "qos": "2",
        "datatype": "auto",
        "broker": "b75c2e5d44c8c685",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 240,
        "wires": [
            [
                "028d3846122b1a6f"
            ]
        ]
    },
    {
        "id": "f109e30682dcc284",
        "type": "mqtt in",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "topic": "Matlab_to_IED12/vphase3",
        "qos": "2",
        "datatype": "auto",
        "broker": "6f3d438ec2dfc7bb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 300,
        "wires": [
            [
                "f68f5068bc548d6a"
            ]
        ]
    },
    {
        "id": "1f40af333177dfe1",
        "type": "mqtt in",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "topic": "Matlab_to_IED12/iphase1",
        "qos": "2",
        "datatype": "auto",
        "broker": "5b2a5c6be5302215",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 360,
        "wires": [
            [
                "ff21063d3090fb0e"
            ]
        ]
    },
    {
        "id": "469b5f7032d46f3e",
        "type": "mqtt in",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "topic": "Matlab_to_IED12/iphase3",
        "qos": "2",
        "datatype": "auto",
        "broker": "671ef33f7857d188",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 480,
        "wires": [
            [
                "d3967a40093bfa43"
            ]
        ]
    },
    {
        "id": "6e179b80ae2cdc9a",
        "type": "mqtt in",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "topic": "Matlab_to_IED12/freq",
        "qos": "2",
        "datatype": "auto",
        "broker": "a9109174f89c9db7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 760,
        "y": 540,
        "wires": [
            [
                "46ba112b3bedacc6"
            ]
        ]
    },
    {
        "id": "5d418b6c9502523e",
        "type": "mqtt in",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "topic": "Matlab_to_IED12/voltage_N",
        "qos": "2",
        "datatype": "auto",
        "broker": "63e4c0bf540a02a2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 780,
        "y": 600,
        "wires": [
            [
                "10a717503e055f65"
            ]
        ]
    },
    {
        "id": "e1bf179a1adddbc9",
        "type": "mqtt in",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "topic": "Matlab_to_IED12/current_N",
        "qos": "2",
        "datatype": "auto",
        "broker": "d324cb11f425af5c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 780,
        "y": 660,
        "wires": [
            [
                "99d23024ba1ce575"
            ]
        ]
    },
    {
        "id": "0fec922be6e09cc6",
        "type": "mqtt in",
        "z": "dd712c2f38ed0ae2",
        "name": "",
        "topic": "Matlab_to_IED12/load",
        "qos": "2",
        "datatype": "auto",
        "broker": "9234dbf911e60213",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 760,
        "y": 720,
        "wires": [
            [
                "86e5b5ef882a7349"
            ]
        ]
    },
    {
        "id": "f808608f6db8a9ec",
        "type": "mqtt out",
        "z": "73cc1669a0e6beaf",
        "name": "MQTT CB12 Channel",
        "topic": "IED12_to_CB/CB12_status",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5b2a5c6be5302215",
        "x": 660,
        "y": 360,
        "wires": []
    },
    {
        "id": "911c78abfb82fb50",
        "type": "debug",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 320,
        "wires": []
    },
    {
        "id": "138ea1f2391fcade",
        "type": "function",
        "z": "73cc1669a0e6beaf",
        "name": "CB Decision",
        "func": "var obtainV = global.get('voltage1');\nvar obtainV2 = global.get(\"voltage2\");\nvar obtainV3 = global.get(\"voltage3\");\nvar obtainI = global.get(\"f10_current1\");\nvar obtainI2 = global.get(\"f10_current2\");\nvar obtainI3 = global.get(\"f10_current3\");\nvar obtainF = global.get(\"Frequency\");\nvar obtainVn = global.get(\"voltageN\");\nvar obtainIn = global.get(\"currentN\");\nvar cb_decision;\nvar ov_status;\nvar oc_status;\nvar switch_status= global.get(\"switch12\");\nvar scadaswitch_status= global.get(\"scadaswitch12\");\n\n\nif (obtainV > 250 || obtainV2 > 250 || obtainV3 > 250)\n{\n    ov_status = 1;\n} else \n{\n    ov_status = 0;\n}\n\nif (obtainI > 5 || obtainI2 > 5 || obtainI3 > 5)\n{\n    oc_status = 1;\n} else \n{\n    oc_status = 0;\n}\n\n\nif  (ov_status == 1 && oc_status == 1 && obtainF > 53)\n {\n    cb_decision = 'Open';\n }\n    else if(ov_status == 1 && oc_status == 1)\n {\n    cb_decision = 'Open';\n } \n    else if(oc_status == 1 && obtainF > 53)\n {\n    cb_decision = 'Open';\n } \n    else if(ov_status == 1 && obtainF > 53)\n {\n    cb_decision = 'Open';\n } \n    else if(oc_status == 1 && obtainF > 53)\n {\n    cb_decision = 'Open';\n } \n    else if (ov_status == 1)\n {\n    cb_decision = 'Open';\n }\n    else if (obtainF > 55)\n {\n    cb_decision = 'Open';\n }\n    else if  (oc_status == 1)\n {\n    cb_decision = 'Open';\n }\n     else if (scadaswitch_status== \"1\" || switch_status== \"1\") \n{\n    cb_decision = 'Open';       \n}\n    else {\n    cb_decision = 'Closed';\n }\n \nvar a = global.get('event');\nvar b = global.get('cb_status');\nvar c = \"Event: \" + a + \" | CB Status: \" + cb_decision;\nmsg.payload = c;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 360,
        "wires": [
            [
                "f808608f6db8a9ec",
                "911c78abfb82fb50"
            ]
        ]
    },
    {
        "id": "0f0e79d36d7da018",
        "type": "function",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "func": "msg.payload = { \n    value: msg.payload, \n    'fc': 6, \n    'unitid': 2, \n    'address': 29 , \n    'quantity': 1 \n    \n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 280,
        "wires": [
            [
                "c43a38955f7b1422",
                "17d5e1c887d66f21"
            ]
        ]
    },
    {
        "id": "a18e68459ece5076",
        "type": "debug",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 280,
        "wires": []
    },
    {
        "id": "c43a38955f7b1422",
        "type": "modbus-flex-write",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "68977b9e0cd330ec",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 870,
        "y": 280,
        "wires": [
            [
                "a18e68459ece5076"
            ],
            []
        ]
    },
    {
        "id": "ce7544b9ed95ac84",
        "type": "function",
        "z": "73cc1669a0e6beaf",
        "name": "Calculate Total Power",
        "func": "var obtainV = global.get('voltage1');\nvar obtainV2 = global.get(\"voltage2\");\nvar obtainV3 = global.get(\"voltage3\");\nvar obtainI = global.get(\"f10_current1\");\nvar obtainI2 = global.get(\"f10_current2\");\nvar obtainI3 = global.get(\"f10_current3\");\nvar power1;\nvar power2;\nvar power3;\nvar total_power;\n\npower1 = obtainV*obtainI;\npower2 = obtainV2*obtainI2;\npower3 = obtainV3*obtainI3;\ntotal_power = power1 + power2 + power3;\n\nmsg.payload = total_power;\nglobal.set('total_power', total_power)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 280,
        "wires": [
            [
                "0f0e79d36d7da018"
            ]
        ]
    },
    {
        "id": "17d5e1c887d66f21",
        "type": "debug",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 240,
        "wires": []
    },
    {
        "id": "1ea74184a4709d4f",
        "type": "inject",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "ce7544b9ed95ac84",
                "138ea1f2391fcade"
            ]
        ]
    },
    {
        "id": "57f24a97bc18de6b",
        "type": "comment",
        "z": "73cc1669a0e6beaf",
        "name": "SCADA Dashboard 's switch",
        "info": "",
        "x": 320,
        "y": 500,
        "wires": []
    },
    {
        "id": "ec6040875fc4fdfc",
        "type": "comment",
        "z": "73cc1669a0e6beaf",
        "name": "IED's dashboard switch",
        "info": "",
        "x": 280,
        "y": 400,
        "wires": []
    },
    {
        "id": "2e5947773decfb00",
        "type": "ui_switch",
        "z": "73cc1669a0e6beaf",
        "name": "switch_status",
        "label": "IED12 Circuit breaker 12 switch",
        "tooltip": "",
        "group": "986292a01c91c3b9",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "payload",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 320,
        "y": 440,
        "wires": [
            [
                "b8d485de87bf60ff"
            ]
        ]
    },
    {
        "id": "b8d485de87bf60ff",
        "type": "function",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "func": "global.set('switch12', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "ab9530a8b829c629",
        "type": "function",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "func": "var switch_status = global.get(\"switch12\");\nmsg.payload = switch_status;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 440,
        "wires": [
            [
                "cad46550a884864c"
            ]
        ]
    },
    {
        "id": "cad46550a884864c",
        "type": "debug",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 440,
        "wires": []
    },
    {
        "id": "2db6e0dd1492cff0",
        "type": "inject",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 690,
        "y": 440,
        "wires": [
            [
                "ab9530a8b829c629"
            ]
        ]
    },
    {
        "id": "42c6527ea6e66591",
        "type": "modbus-read",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "562",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "08c01ff48ebf7262",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 310,
        "y": 560,
        "wires": [
            [
                "b77e1b932c4e99f3"
            ],
            []
        ]
    },
    {
        "id": "b77e1b932c4e99f3",
        "type": "function",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "func": "global.set('scadaswitch12', msg.payload)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "497f72979fbf7638",
        "type": "function",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "func": "var scadaswitch_status = global.get(\"scadaswitch12\");\nmsg.payload = scadaswitch_status;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 560,
        "wires": [
            [
                "ccfc3a3bcfc21762"
            ]
        ]
    },
    {
        "id": "ccfc3a3bcfc21762",
        "type": "debug",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 560,
        "wires": []
    },
    {
        "id": "fbdfa30f71921452",
        "type": "inject",
        "z": "73cc1669a0e6beaf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 710,
        "y": 560,
        "wires": [
            [
                "497f72979fbf7638"
            ]
        ]
    },
    {
        "id": "0d5a92f75cd9c9a1",
        "type": "function",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;\n\n//if(msg.payload > '220')\n //{\n//      msg.payload = 'value exceeded';\n// } \n// else {\n //    msg.payload = msg.payload;\n// }\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 320,
        "wires": [
            [
                "0c1bd3db5308f7e5"
            ]
        ]
    },
    {
        "id": "7feb1dd6201ffa21",
        "type": "function",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 380,
        "wires": [
            [
                "2fe41e478c2797c3"
            ]
        ]
    },
    {
        "id": "656cdb698bdbf745",
        "type": "function",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 440,
        "wires": [
            [
                "b6449f73a840e9f8"
            ]
        ]
    },
    {
        "id": "be16868105a34176",
        "type": "function",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "func": "var d = global.get('f10_current1');\nmsg.payload = parseFloat(d).toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 500,
        "wires": [
            [
                "74087375626b520b"
            ]
        ]
    },
    {
        "id": "3899de72cce369eb",
        "type": "function",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "func": "var d = global.get('f10_current2');\nmsg.payload = parseFloat(d).toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 560,
        "wires": [
            [
                "49a8ece51813a9e7"
            ]
        ]
    },
    {
        "id": "138ac9ba0a545656",
        "type": "function",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "func": "var d = global.get('f10_current3');\nmsg.payload = parseFloat(d).toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 620,
        "wires": [
            [
                "d80a07c3a77f5b02"
            ]
        ]
    },
    {
        "id": "c87f2ae4a1743448",
        "type": "function",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 680,
        "wires": [
            [
                "a13b3ce4e3d7773e"
            ]
        ]
    },
    {
        "id": "6002c5f8a9f7e830",
        "type": "function",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 740,
        "wires": [
            [
                "1022af2f59ed821b"
            ]
        ]
    },
    {
        "id": "d726758b67127f6e",
        "type": "function",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 800,
        "wires": [
            [
                "109e732b87243086"
            ]
        ]
    },
    {
        "id": "0c1bd3db5308f7e5",
        "type": "ui_text",
        "z": "5e9a73ca71568bd9",
        "group": "61b77b254474bd31",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Phase A Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1100,
        "y": 320,
        "wires": []
    },
    {
        "id": "2fe41e478c2797c3",
        "type": "ui_text",
        "z": "5e9a73ca71568bd9",
        "group": "61b77b254474bd31",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Phase B Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 380,
        "wires": []
    },
    {
        "id": "b6449f73a840e9f8",
        "type": "ui_text",
        "z": "5e9a73ca71568bd9",
        "group": "61b77b254474bd31",
        "order": 3,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Phase C Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 440,
        "wires": []
    },
    {
        "id": "74087375626b520b",
        "type": "ui_text",
        "z": "5e9a73ca71568bd9",
        "group": "61b77b254474bd31",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase A Current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1100,
        "y": 500,
        "wires": []
    },
    {
        "id": "49a8ece51813a9e7",
        "type": "ui_text",
        "z": "5e9a73ca71568bd9",
        "group": "61b77b254474bd31",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase B Current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1110,
        "y": 560,
        "wires": []
    },
    {
        "id": "d80a07c3a77f5b02",
        "type": "ui_text",
        "z": "5e9a73ca71568bd9",
        "group": "61b77b254474bd31",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase C current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1100,
        "y": 620,
        "wires": []
    },
    {
        "id": "a13b3ce4e3d7773e",
        "type": "ui_text",
        "z": "5e9a73ca71568bd9",
        "group": "61b77b254474bd31",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Frequency",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "x": 1090,
        "y": 680,
        "wires": []
    },
    {
        "id": "1022af2f59ed821b",
        "type": "ui_text",
        "z": "5e9a73ca71568bd9",
        "group": "61b77b254474bd31",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Neutral Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "x": 1100,
        "y": 740,
        "wires": []
    },
    {
        "id": "109e732b87243086",
        "type": "ui_text",
        "z": "5e9a73ca71568bd9",
        "group": "61b77b254474bd31",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Neutral Current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1100,
        "y": 800,
        "wires": []
    },
    {
        "id": "37eb81ee43e389ac",
        "type": "inject",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 550,
        "y": 900,
        "wires": [
            [
                "24ac92f62953b63a"
            ]
        ]
    },
    {
        "id": "956c4e256fe9f1d0",
        "type": "inject",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 540,
        "y": 860,
        "wires": [
            [
                "816fe6d65b6b60b7"
            ]
        ]
    },
    {
        "id": "816fe6d65b6b60b7",
        "type": "change",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "savedData",
                "pt": "flow",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "24ac92f62953b63a",
        "type": "function",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "func": "\nvar obtainV = global.get('voltage1');\nvar obtainV2 = global.get(\"voltage2\");\nvar obtainV3 = global.get(\"voltage3\");\n//var obtainI = global.get(\"current1\");\n//var obtainI2 = global.get(\"current2\");\n//var obtainI3 = global.get(\"current3\");\nvar obtainF = global.get(\"Frequency\");\nvar obtainVn = global.get(\"voltageN\");\nvar obtainIn = global.get(\"currentN\");\nvar cb_status;\nvar event;\nvar ov_status;\nvar oc_status;\nvar phasefaultV;\nvar phasefaultI;\nvar obtainI = global.get('f10_current1');\nvar obtainI2 = global.get('f10_current2');\nvar obtainI3 = global.get('f10_current3');\nvar switch_status= global.get(\"switch12\");\nvar scadaswitch_status= global.get(\"scadaswitch12\");\n\nif (obtainV > 250 || obtainV2 > 250 || obtainV3 > 250)\n{\n    ov_status = 1;\n   \n} else \n{\n    ov_status = 0;\n}\n\nif (obtainI > 5 || obtainI2 > 5 || obtainI3 > 5)\n{\n    oc_status = 1;\n    \n} else \n{\n    oc_status = 0;\n}\n\nif  (ov_status == 1 && oc_status == 1 && obtainF > 53)\n {\n    cb_status = 'Open';\n    event  = 'OC, OV & OF ';\n }\n    else if(ov_status == 1 && oc_status == 1)\n {\n    cb_status = 'Open';\n    event  = 'OV & OC';\n } \n    else if(oc_status == 1 && obtainF > 53)\n {\n    cb_status = 'Open';\n    event  = 'OC & OF';\n } \n    else if(ov_status == 1 && obtainF > 53)\n {\n    cb_status = 'Open';\n    event  = 'OV & OF';\n } \n    else if(oc_status == 1 && obtainF > 53)\n {\n    cb_status = 'Open';\n    event  = 'OC & OF';\n } \n    else if (ov_status == 1)\n {\n    cb_status = 'Open';\n    event  = 'Overvoltage';\n }\n    else if (obtainF > 55)\n {\n    cb_status = 'Open';\n    event  = 'Over Frequency';\n }\n    else if  (oc_status == 1)\n {\n     cb_status = 'Open';\n     event  = 'Overcurrent';\n }\n    else if (scadaswitch_status== \"1\" || switch_status== \"1\") \n{\n    cb_decision = 'Open';     \n    event  = 'Manual Open';\n}\n    else {\n    cb_status= 'Closed';\n    event = 'Clear';\n }\n   global.set('F10CBEvent', event)\n \n// phase event voltage\nif (obtainV > 250 && obtainV2 > 250 && obtainV3 > 250)\n {\n     phasefaultV= \" Phase A,B,C \";\n }\nelse if (obtainV > 250 && obtainV2 <= 250 && obtainV3 <= 250)\n{\n    phasefaultV= \" Phase A  \";\n    \n} else if(obtainV > 250 && obtainV2 > 250 && obtainV3 <= 250)\n{\n  phasefaultV= \" Phase A,B  \";\n}\nelse if(obtainV <= 250 && obtainV2 > 250 && obtainV3 > 250)\n{\n  phasefaultV= \" Phase B,C  \";\n}\nelse if(obtainV > 250 && obtainV2 <= 250 && obtainV3 > 250)\n{\n  phasefaultV= \" Phase A,C  \";\n}\nelse if(obtainV <= 250 && obtainV2 > 250 && obtainV3 <= 250)\n{\n  phasefaultV= \" Phase B  \";\n}\nelse if(obtainV <= 250 && obtainV2 <= 250 && obtainV3 > 250)\n{\n  phasefaultV= \" Phase C  \";\n}\nelse \n{\n  phasefaultV= \" Clear \";\n}\n\n// phase fault current \n\nif (obtainI > 5 && obtainI2 > 5 && obtainI3 > 5)\n {\n     phasefaultI= \" Phase A,B,C \";\n }\nelse if (obtainI > 5 && obtainI2 <= 5 && obtainI3 <= 5)\n{\n    phasefaultI= \" Phase A  \";\n    \n} else if(obtainI > 5 && obtainVI > 5 && obtainI3 <= 5)\n{\n  phasefaultI= \" Phase A,B  \";\n}\nelse if(obtainI <= 5 && obtainI2 > 5 && obtainI3 > 5)\n{\n  phasefaultI= \" Phase B,C  \";\n}\nelse if(obtainI > 5 && obtainI2 <= 5 && obtainI3 > 5)\n{\n  phasefaultI= \" Phase C,A \";\n}\nelse if(obtainI <= 5 && obtainI2 > 5 && obtainI3 <= 5)\n{\n  phasefaultI= \" Phase B  \";\n}\nelse if(obtainI <= 5 && obtainI2 <= 5 && obtainI3 > 5)\n{\n  phasefaultI= \" Phase C \";\n}\nelse \n{\n  phasefaultI= \" Clear \";\n}\n\nglobal.set('event', event)\n \ntableData = flow.get(\"savedData\") || [] ;\n\ntableData.unshift({\n    \"Timestamp\":new Date(msg.payload).toLocaleString(),\n    \"CB Status\": cb_status,\n    \"Event\": event ,\n    \"phasefaultV\": phasefaultV ,\n    \"phasefaultI\": phasefaultI ,\n    }\n); \n\nif(tableData.length >8) tableData.pop ();\n    \nmsg.payload = tableData;\n\nflow.set(\"savedData\", tableData);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 900,
        "wires": [
            [
                "054f7c64a46fcba1"
            ]
        ]
    },
    {
        "id": "054f7c64a46fcba1",
        "type": "ui_table",
        "z": "5e9a73ca71568bd9",
        "group": "e4553422fb4ca140",
        "name": "",
        "order": 1,
        "width": 14,
        "height": 6,
        "columns": [
            {
                "field": "Timestamp",
                "title": "Time",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "CB Status",
                "title": "CB state",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Event",
                "title": "Fault Event",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "phasefaultV",
                "title": "Faulty Phase (V)",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "phasefaultI",
                "title": "Faulty Phase (I)",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 950,
        "y": 900,
        "wires": []
    },
    {
        "id": "4169345b8d843091",
        "type": "mqtt in",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "topic": "Matlab_to_IED12/vphase1",
        "qos": "2",
        "datatype": "auto",
        "broker": "c780804574035f33",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 590,
        "y": 320,
        "wires": [
            [
                "0d5a92f75cd9c9a1"
            ]
        ]
    },
    {
        "id": "58185040922fd5a0",
        "type": "mqtt in",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "topic": "Matlab_to_IED12/vphase2",
        "qos": "2",
        "datatype": "auto",
        "broker": "b75c2e5d44c8c685",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 590,
        "y": 380,
        "wires": [
            [
                "7feb1dd6201ffa21"
            ]
        ]
    },
    {
        "id": "b703f82ca4e94465",
        "type": "mqtt in",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "topic": "Matlab_to_IED12/vphase3",
        "qos": "2",
        "datatype": "auto",
        "broker": "6f3d438ec2dfc7bb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 590,
        "y": 440,
        "wires": [
            [
                "656cdb698bdbf745"
            ]
        ]
    },
    {
        "id": "f04055b0ce9feb51",
        "type": "mqtt in",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "topic": "Matlab_to_IED12/iphase1",
        "qos": "2",
        "datatype": "auto",
        "broker": "3abdb6fbc2437e51",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 590,
        "y": 500,
        "wires": [
            [
                "be16868105a34176"
            ]
        ]
    },
    {
        "id": "3cf8b88777b53e87",
        "type": "mqtt in",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "topic": "Matlab_to_IED12/iphase2",
        "qos": "2",
        "datatype": "auto",
        "broker": "c1a3a17b7fb52573",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 590,
        "y": 560,
        "wires": [
            [
                "3899de72cce369eb"
            ]
        ]
    },
    {
        "id": "76c2f96c5f6af191",
        "type": "mqtt in",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "topic": "Matlab_to_IED12/iphase3",
        "qos": "2",
        "datatype": "auto",
        "broker": "28dd6d951f6889f1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 590,
        "y": 620,
        "wires": [
            [
                "138ac9ba0a545656"
            ]
        ]
    },
    {
        "id": "0e4beca6bd53afbc",
        "type": "mqtt in",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "topic": "Matlab_to_IED12/freq",
        "qos": "2",
        "datatype": "auto",
        "broker": "a9109174f89c9db7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 580,
        "y": 680,
        "wires": [
            [
                "c87f2ae4a1743448"
            ]
        ]
    },
    {
        "id": "4a5f216ad9dbef41",
        "type": "mqtt in",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "topic": "Matlab_to_IED12/voltage_N",
        "qos": "2",
        "datatype": "auto",
        "broker": "64d2a851e3b6ce54",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 600,
        "y": 740,
        "wires": [
            [
                "6002c5f8a9f7e830"
            ]
        ]
    },
    {
        "id": "c7bf4f74d5a799f9",
        "type": "mqtt in",
        "z": "5e9a73ca71568bd9",
        "name": "",
        "topic": "Matlab_to_IED12/current_N",
        "qos": "2",
        "datatype": "auto",
        "broker": "39ca2212f01664f2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 600,
        "y": 800,
        "wires": [
            [
                "d726758b67127f6e"
            ]
        ]
    },
    {
        "id": "b150a51367ab2d86",
        "type": "inject",
        "z": "057cf6507b4baaec",
        "name": "create database table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "CREATE TABLE Input_data_ied12(TIMESTAMP TEXT NOT NULL,VOLTAGE1 INT NOT NULL, VOLTAGE2 INT NOT NULL,VOLTAGE3 INT NOT NULL,CURRENT1 INT NOT NULL, CURRENT2 INT NOT NULL, CURRENT3 INT NOT NULL, FREQUENCY INT NOT NULL, VOLTAGEN INT, CURRENTN INT, TOTAL_POWER INT NOT NULL)",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 140,
        "wires": [
            [
                "7fc3c289d5443132"
            ]
        ]
    },
    {
        "id": "e97b8852dd6feb98",
        "type": "debug",
        "z": "057cf6507b4baaec",
        "name": "database_out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 200,
        "wires": []
    },
    {
        "id": "d2f3c33406732a58",
        "type": "inject",
        "z": "057cf6507b4baaec",
        "name": "delete records",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "DELETE FROM Input_data_ied12 WHERE TIMESTAMP>=0",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 200,
        "wires": [
            [
                "7fc3c289d5443132"
            ]
        ]
    },
    {
        "id": "6413a1ad9357fd87",
        "type": "inject",
        "z": "057cf6507b4baaec",
        "name": "show RECORDS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "SELECT * FROM Input_data_ied12 ORDER BY TIMESTAMP DESC LIMIT 100",
        "payload": "",
        "payloadType": "date",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "72918a342cedf333"
            ]
        ]
    },
    {
        "id": "2ac204b12aaca12a",
        "type": "ui_template",
        "z": "057cf6507b4baaec",
        "group": "afac0270e3ff0d6c",
        "name": "Database F10 IED12 IN",
        "order": 1,
        "width": "18",
        "height": "15",
        "format": "<style>\ntable, th, td\n{\n    height:10px;\n    width:900px;\n    background:lightblue;\n    border: 1px solid black;\n    border-collapse: collapse;\n}\n</style>\n<div class=\"table\">\n<table style=\"width:100%\">\n  <tr>\n    <th>TIMESTAMP</th>\n    <th>V1</th>\n    <th>V2</th>\n    <th>V3</th>\n    <th>I1</th>\n    <th>I2</th>\n    <th>I3</th>\n    <th>FREQ</th>\n    <th>VOLTAGEN</th>\n    <th>CURRENTN</th>\n    <th>TOTAL_POWER</th>\n  \n  </tr>\n  <tr ng-repeat=\"x in msg.payload\">\n    <td style=\"text-align:center\">{{msg.payload[$index].TIMESTAMP}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].VOLTAGE1}}</td> \n    <td style=\"text-align:center\">{{msg.payload[$index].VOLTAGE2}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].VOLTAGE3}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].CURRENT1}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].CURRENT2}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].CURRENT3}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].FREQUENCY}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].VOLTAGEN}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].CURRENTN}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].TOTAL_POWER}}</td>\n    \n  </tr>\n</table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 910,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "7fc3c289d5443132",
        "type": "sqlite",
        "z": "057cf6507b4baaec",
        "mydb": "40877a552e161a09",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database F10 IED12 IN",
        "x": 670,
        "y": 200,
        "wires": [
            [
                "e97b8852dd6feb98"
            ]
        ]
    },
    {
        "id": "acd26b75e53ec033",
        "type": "inject",
        "z": "057cf6507b4baaec",
        "name": "Test Data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 320,
        "wires": [
            [
                "92eadf7abd492bbe"
            ]
        ]
    },
    {
        "id": "92eadf7abd492bbe",
        "type": "function",
        "z": "057cf6507b4baaec",
        "name": "write query",
        "func": "var timestamp = new Date().toLocaleString();\ntimestamp=timestamp.substring(0, 21);\nvar voltage1=global.get(\"voltage1\");\nvar voltage2=global.get(\"voltage2\");\nvar voltage3=global.get(\"voltage3\");\nvar current1=global.get(\"current1\");\nvar current2=global.get(\"current2\");\nvar current3=global.get(\"current3\");\nvar frequency=global.get(\"Frequency\");\nvar voltageN=global.get(\"voltageN\");\nvar currentN=global.get(\"currentN\");\nvar total_power=global.get(\"total_power\");\n//put data into json string\n\nmsg=\"( timestamp,voltage1,voltage2,voltage3,current1,current2,current3,Frequency,voltageN,currentN,total_power) values(\\'\"+timestamp +\"\\',\" + voltage1 + \",\" + voltage2 +\",\" + voltage3 + \",\" + current1 + \",\" + current2 + \",\" + current3 + \",\" + frequency + \",\" + voltageN + \",\" + currentN + \",\" + total_power  + \")\";\nvar topic=\"INSERT INTO Input_data_ied12 \" +msg;\nvar msg1={};\nmsg1.topic=topic;\nmsg1.payload=timestamp;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 320,
        "wires": [
            [
                "5328ca23c1375e9c",
                "0468a7bc0aee887c"
            ]
        ]
    },
    {
        "id": "5328ca23c1375e9c",
        "type": "debug",
        "z": "057cf6507b4baaec",
        "name": "sql out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "72918a342cedf333",
        "type": "sqlite",
        "z": "057cf6507b4baaec",
        "mydb": "40877a552e161a09",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database F10 IED12 IN",
        "x": 670,
        "y": 80,
        "wires": [
            [
                "2ac204b12aaca12a"
            ]
        ]
    },
    {
        "id": "7fc8fe9f5bf7e100",
        "type": "catch",
        "z": "057cf6507b4baaec",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 340,
        "y": 480,
        "wires": [
            [
                "1d7d4b232c74724d",
                "6c77b1270d6b8d61"
            ]
        ]
    },
    {
        "id": "1d7d4b232c74724d",
        "type": "debug",
        "z": "057cf6507b4baaec",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 500,
        "wires": []
    },
    {
        "id": "f7e00afb4d4fbe0b",
        "type": "ui_text",
        "z": "057cf6507b4baaec",
        "group": "cc56352a26624647",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 810,
        "y": 420,
        "wires": []
    },
    {
        "id": "6c77b1270d6b8d61",
        "type": "function",
        "z": "057cf6507b4baaec",
        "name": "sql errors",
        "func": "var payload=msg.error.message;\nmsg.payload = payload +\" timestamp \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 420,
        "wires": [
            [
                "f7e00afb4d4fbe0b"
            ]
        ]
    },
    {
        "id": "9070c124fafa469e",
        "type": "inject",
        "z": "057cf6507b4baaec",
        "name": "Drop Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "drop table Input_data_ied12",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 260,
        "wires": [
            [
                "7fc3c289d5443132"
            ]
        ]
    },
    {
        "id": "632e58ad911e6832",
        "type": "function",
        "z": "057cf6507b4baaec",
        "name": "Clear errors",
        "func": "node.error(\"\",msg);//clear error\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "ff7d5bfd3f0f59f6",
        "type": "inject",
        "z": "057cf6507b4baaec",
        "name": "clear errors",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 350,
        "y": 580,
        "wires": [
            [
                "632e58ad911e6832"
            ]
        ]
    },
    {
        "id": "0468a7bc0aee887c",
        "type": "delay",
        "z": "057cf6507b4baaec",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 820,
        "y": 260,
        "wires": [
            [
                "7fc3c289d5443132"
            ]
        ]
    },
    {
        "id": "9f0ed9fdd27999e3",
        "type": "inject",
        "z": "3f64f611b7c8edf0",
        "name": "create database table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "CREATE TABLE output_data_ied12(TIMESTAMP TEXT NOT NULL,F10CBStatus TEXT NOT NULL,F10CBEvent TEXT NOT NULL)",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 160,
        "wires": [
            [
                "6d6218b02d9c65a9"
            ]
        ]
    },
    {
        "id": "396306469f4f099b",
        "type": "debug",
        "z": "3f64f611b7c8edf0",
        "name": "database_out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 220,
        "wires": []
    },
    {
        "id": "2ac172a895cb0218",
        "type": "inject",
        "z": "3f64f611b7c8edf0",
        "name": "delete records",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "DELETE FROM output_data_ied12 WHERE TIMESTAMP>=0",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "6d6218b02d9c65a9"
            ]
        ]
    },
    {
        "id": "9fa9fa8cf72f8524",
        "type": "inject",
        "z": "3f64f611b7c8edf0",
        "name": "show RECORDS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "SELECT * FROM output_data_ied12 ORDER BY TIMESTAMP DESC LIMIT 100",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 100,
        "wires": [
            [
                "9f399afd7433beea"
            ]
        ]
    },
    {
        "id": "75664b7f5261656d",
        "type": "ui_template",
        "z": "3f64f611b7c8edf0",
        "group": "9a22e7087608c69a",
        "name": "Database F10 IED12 OUT",
        "order": 1,
        "width": "18",
        "height": "15",
        "format": "<style>\ntable, th, td\n{\n    height:10px;\n    width:900px;\n    background:lightblue;\n    border: 1px solid black;\n    border-collapse: collapse;\n}\n</style>\n<div class=\"table\">\n<table style=\"width:100%\">\n  <tr>\n    <th>TIMESTAMP</th>\n    <th>F10CBStatus</th>\n    <th>F10CBEvent</th>\n    \n  </tr>\n  <tr ng-repeat=\"x in msg.payload\">\n    <td style=\"text-align:center\">{{msg.payload[$index].TIMESTAMP}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].F10CBStatus}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].F10CBEvent}}</td>\n\n  </tr>\n</table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 860,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "6d6218b02d9c65a9",
        "type": "sqlite",
        "z": "3f64f611b7c8edf0",
        "mydb": "40877a552e161a09",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database F10 IED12 OUT",
        "x": 600,
        "y": 220,
        "wires": [
            [
                "396306469f4f099b"
            ]
        ]
    },
    {
        "id": "bbfc3fd2782d9c9b",
        "type": "inject",
        "z": "3f64f611b7c8edf0",
        "name": "Test Data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 400,
        "wires": [
            [
                "3b403da313384298"
            ]
        ]
    },
    {
        "id": "3b403da313384298",
        "type": "function",
        "z": "3f64f611b7c8edf0",
        "name": "write query",
        "func": "var timestamp = new Date().toLocaleString();\ntimestamp=timestamp.substring(0, 21);\nvar F10CBStatus=global.get(\"F10CBStatus\");\nvar F10CBEvent=global.get(\"F10CBEvent\");\n\n//put data into json string\n\nmsg=\"(timestamp,F10CBStatus,F10CBEvent) values(\\'\"+timestamp +\"\\',\\'\" + F10CBStatus + \"\\',\\'\" + F10CBEvent + \"\\')\";\nvar topic=\"INSERT INTO output_data_ied12 \" +msg;\nvar msg1={};\nmsg1.topic=topic;\nmsg1.payload=timestamp;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 400,
        "wires": [
            [
                "6e4e5cad05c264d0",
                "f41218d995f19639"
            ]
        ]
    },
    {
        "id": "6e4e5cad05c264d0",
        "type": "debug",
        "z": "3f64f611b7c8edf0",
        "name": "sql out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 400,
        "wires": []
    },
    {
        "id": "9f399afd7433beea",
        "type": "sqlite",
        "z": "3f64f611b7c8edf0",
        "mydb": "40877a552e161a09",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database F10 IED12 OUT",
        "x": 600,
        "y": 100,
        "wires": [
            [
                "75664b7f5261656d"
            ]
        ]
    },
    {
        "id": "b18ca1f3811b32f9",
        "type": "catch",
        "z": "3f64f611b7c8edf0",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 220,
        "y": 540,
        "wires": [
            [
                "697236f9bbbea451",
                "ec623b1fac2507dc"
            ]
        ]
    },
    {
        "id": "697236f9bbbea451",
        "type": "debug",
        "z": "3f64f611b7c8edf0",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 540,
        "wires": []
    },
    {
        "id": "90f13c2a2d3c6ec0",
        "type": "ui_text",
        "z": "3f64f611b7c8edf0",
        "group": "cc56352a26624647",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 750,
        "y": 480,
        "wires": []
    },
    {
        "id": "ec623b1fac2507dc",
        "type": "function",
        "z": "3f64f611b7c8edf0",
        "name": "sql errors",
        "func": "var payload=msg.error.message;\nmsg.payload = payload +\" timestamp \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 480,
        "wires": [
            [
                "90f13c2a2d3c6ec0"
            ]
        ]
    },
    {
        "id": "2f8cd8bb0502e6ea",
        "type": "inject",
        "z": "3f64f611b7c8edf0",
        "name": "Drop Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "drop table output_data_ied12",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 280,
        "wires": [
            [
                "6d6218b02d9c65a9"
            ]
        ]
    },
    {
        "id": "ea30a7347681c99d",
        "type": "function",
        "z": "3f64f611b7c8edf0",
        "name": "Clear errors",
        "func": "node.error(\"\",msg);//clear error\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "58f0906ec5f22a24",
        "type": "inject",
        "z": "3f64f611b7c8edf0",
        "name": "clear errors",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 230,
        "y": 620,
        "wires": [
            [
                "ea30a7347681c99d"
            ]
        ]
    },
    {
        "id": "f41218d995f19639",
        "type": "delay",
        "z": "3f64f611b7c8edf0",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 760,
        "y": 340,
        "wires": [
            [
                "6d6218b02d9c65a9"
            ]
        ]
    },
    {
        "id": "d0a1f315b7217924",
        "type": "mqtt in",
        "z": "3f64f611b7c8edf0",
        "name": "",
        "topic": "IED12_to_CB/CB12_status",
        "qos": "2",
        "datatype": "auto",
        "broker": "d9e40e27b3d0c796",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1050,
        "y": 180,
        "wires": [
            [
                "8a7f0dcbe57750b9",
                "00fca11878de222f"
            ]
        ]
    },
    {
        "id": "8a7f0dcbe57750b9",
        "type": "function",
        "z": "3f64f611b7c8edf0",
        "name": "",
        "func": "global.set('F10CBStatus', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "00fca11878de222f",
        "type": "debug",
        "z": "3f64f611b7c8edf0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 120,
        "wires": []
    },
    {
        "id": "2de07f7d714c5a93",
        "type": "modbus-flex-write",
        "z": "9deb54e5d9507e03",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "ba33892edcfb0e0a",
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "x": 870,
        "y": 460,
        "wires": [
            [
                "b727600c71654f21"
            ],
            []
        ]
    },
    {
        "id": "b727600c71654f21",
        "type": "debug",
        "z": "9deb54e5d9507e03",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 420,
        "wires": []
    },
    {
        "id": "f0b8864cee99e578",
        "type": "comment",
        "z": "9deb54e5d9507e03",
        "name": "Sending all Values to SCADA for Monitoring",
        "info": "",
        "x": 310,
        "y": 200,
        "wires": []
    },
    {
        "id": "44f71b921cb64d7d",
        "type": "function",
        "z": "9deb54e5d9507e03",
        "name": "",
        "func": "msg.payload = { \n    value: msg.payload, \n    \n    'fc': 16, \n    'unitid': 10, \n    'address': 325 , \n    'quantity': 9 \n    \n} \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 540,
        "wires": [
            [
                "2de07f7d714c5a93",
                "fcb160ee54a065f3"
            ]
        ]
    },
    {
        "id": "fcb160ee54a065f3",
        "type": "debug",
        "z": "9deb54e5d9507e03",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 941.3333740234375,
        "y": 537,
        "wires": []
    },
    {
        "id": "bbae90fd3f91ee2e",
        "type": "inject",
        "z": "9deb54e5d9507e03",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 540,
        "wires": [
            [
                "ff8781434502e548"
            ]
        ]
    },
    {
        "id": "ff8781434502e548",
        "type": "function",
        "z": "9deb54e5d9507e03",
        "name": "Combine Values into Array",
        "func": "var a = global.get('voltage1');\nvar b = global.get('voltage2');\nvar c = global.get('voltage3');\nvar d = global.get('f10_current1');\nvar e = global.get('f10_current2');\nvar f = global.get('f10_current3');\nvar g = global.get('Frequency');\nvar h = global.get('voltageN');\nvar i = global.get('currentN');\n\nconst modbus = [a, b, c, d, e, f, g, h, i];\n\nmsg.payload = modbus;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 540,
        "wires": [
            [
                "44f71b921cb64d7d"
            ]
        ]
    }
]