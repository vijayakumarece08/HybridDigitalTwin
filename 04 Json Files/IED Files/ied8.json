[
    {
        "id": "4a19314f62e81afa",
        "type": "tab",
        "label": "Matlab to Feeder 6",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a2471bbd3d962209",
        "type": "tab",
        "label": "Feeder 6 IED CB Decision",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bcccda1a284b21ed",
        "type": "tab",
        "label": "Feeder 6 IED Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "eebb0b65b2e98377",
        "type": "tab",
        "label": "PI_F6_IED8 IN DB",
        "disabled": false,
        "info": ""
    },
    {
        "id": "260c1df35b77625f",
        "type": "tab",
        "label": "PI_F6_IED8 OUT DB",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c374fe5106ba07da",
        "type": "tab",
        "label": "Feeder 6 IED to Scada",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3d5fc8a8637d751d",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "2359efe2db50d66f",
        "type": "mqtt-broker",
        "name": "Heroku Cloud",
        "broker": "driver.cloudmqtt.com",
        "port": "18833",
        "tls": "",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "6000",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "036c030afce1c4d3",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "b1da253951cb8f06",
        "type": "ui_group",
        "name": "home",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "da7a0e45a5de60a8",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "7dfe3e5838aab258",
        "type": "mqtt-broker",
        "name": "Testing MQTT broker",
        "broker": "172.20.10.14",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "6c8498927d37b665",
        "type": "mqtt-broker",
        "name": "thingspeak",
        "broker": "mqtt.thingspeak.com",
        "port": "1883",
        "clientid": "MSwRNSEaIQwaDD0rMBQxFxc",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "6000",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "14d8de8b997f2ec1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.124",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "2a1cc475cbbca827",
        "type": "mqtt-broker",
        "name": "",
        "broker": "tcp://driver.cloudmqtt.com:18833",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "51edc2e6cc8684a7",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.54",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "fdcc801fe1d8b343",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.103",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "272ac4692d9e20f3",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "localhost",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "34054e5f1cdf11df",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.103",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "311c0c5be11a60f3",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.115",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "e381d1409a2571ed",
        "type": "modbus-client",
        "name": "rasppi",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.104",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "47ffdce52ff642a9",
        "type": "ui_group",
        "name": "MGC Control Panel",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "86d87706a30afdac",
        "type": "ui_group",
        "name": "Values",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "815ef716251225ba",
        "type": "ui_group",
        "name": "Status",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "acca16a69026b9ee",
        "type": "ui_group",
        "name": "Values",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4aba821234aa481c",
        "type": "ui_group",
        "name": "Status",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "3a301d5002d98841",
        "type": "ui_group",
        "name": "Values",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "436fbbee09202862",
        "type": "ui_group",
        "name": "Status",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "392ad4758b103c25",
        "type": "ui_group",
        "name": "Control",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "941f986ab591a1cf",
        "type": "ui_group",
        "name": "Control",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "310c3d4772f3add7",
        "type": "ui_group",
        "name": "Event Recording",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": true
    },
    {
        "id": "794bb94446e8ed81",
        "type": "ui_group",
        "name": "IED",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "913053ff0e5ea18d",
        "type": "ui_group",
        "name": "HT-SS1-Q01A",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "e932db8ea978a7bf",
        "type": "ui_group",
        "name": "HT-SS1-Q01B",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "e10f878f62fc297e",
        "type": "ui_group",
        "name": "HT-SS1-Q02",
        "tab": "",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "a8f77cbf8c826693",
        "type": "ui_group",
        "name": "LT-MGB-Q01A",
        "tab": "",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "f12131177895ba36",
        "type": "ui_group",
        "name": "LT-MGB-Q01B",
        "tab": "",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "196b033e098e4318",
        "type": "ui_group",
        "name": "LT-MGB-Q02",
        "tab": "",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "3a53c2fca23832dd",
        "type": "ui_group",
        "name": "LT-MGB-Q03",
        "tab": "",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "f7f6813f21b1972a",
        "type": "ui_group",
        "name": "LT-MGB-Q04",
        "tab": "",
        "order": 11,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "ca7435e75efa6e53",
        "type": "ui_group",
        "name": "WDB1-Q01A",
        "tab": "",
        "order": 12,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "f659ea8d2f253c70",
        "type": "ui_group",
        "name": "WDB1-Q01B",
        "tab": "",
        "order": 13,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "b13b619c4ff66ac7",
        "type": "ui_group",
        "name": "HT-SP-Q01",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "b890c648915623eb",
        "type": "ui_group",
        "name": "HT-SS1-Q01A",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "ac6435cd18bbc2b6",
        "type": "ui_group",
        "name": "HT-SS1-Q01B",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "44af492738d1b045",
        "type": "ui_group",
        "name": "LT-MGB-Q01A",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "f77f368d52331bf8",
        "type": "ui_group",
        "name": "LT-MGB-Q01B",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "377b4a08c893dbe9",
        "type": "ui_group",
        "name": "LT-MGB-Q02",
        "tab": "",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "f14ea9c3129fc8f7",
        "type": "ui_group",
        "name": "LT-MGB-Q04",
        "tab": "",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "1cd250069611aa51",
        "type": "ui_group",
        "name": "DI1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8e2653ce18c234f7",
        "type": "ui_group",
        "name": "DI 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "de5b12a368eacef5",
        "type": "ui_group",
        "name": " ",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "19",
        "collapse": false
    },
    {
        "id": "d8493e612904c09b",
        "type": "ui_group",
        "name": "",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "467d8b497150a96e",
        "type": "ui_group",
        "name": "",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "561227c83ae276b7",
        "type": "ui_group",
        "name": "SLD",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 26,
        "collapse": false
    },
    {
        "id": "8e1e9f500b1fb5c3",
        "type": "ui_group",
        "name": "Graphics",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "bc521945f99d909c",
        "type": "ui_group",
        "name": "Controls",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ee2dece457d01a04",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "c90e898aa1245b28",
        "type": "ui_group",
        "name": "SLD",
        "tab": "307bf661.b180da",
        "order": 1,
        "disp": false,
        "width": 19,
        "collapse": false
    },
    {
        "id": "8bfc3d259a442515",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "307bf661.b180da",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "f6ccb264fc9be9c0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "ec2-13-251-128-198.ap-southeast-1.compute.amazonaws.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "576d8a64c4eb8a89",
        "type": "ui_group",
        "name": "Group 5",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": 6
    },
    {
        "id": "f79d0e637fdf0f47",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "8826ada3ffc792c6",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": 6
    },
    {
        "id": "1f6afce1193c0d00",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.106",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "c19ca52dc9e7b51b",
        "type": "mqtt-broker",
        "name": "",
        "broker": "tcp://driver.cloudmqtt.com:18833",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d568195170d29e4d",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.103",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "c5aa0848e05ed772",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "80b962882194c054",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.54",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "87624fd8ddd5ef29",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.104",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "00cb87d67d70d087",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.122",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "c835cbbd79b39b9e",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": true
    },
    {
        "id": "93ae11ca84fc1e4a",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.106",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "6609460f9920d375",
        "type": "ui_group",
        "name": "IED 8",
        "tab": "e697b67e850e57c0",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "56e06b397d8f4cf9",
        "type": "ui_group",
        "name": "Event Recording",
        "tab": "e697b67e850e57c0",
        "order": 1,
        "disp": true,
        "width": 14,
        "collapse": true
    },
    {
        "id": "e697b67e850e57c0",
        "type": "ui_tab",
        "name": "Meters",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "29cd9cf4045b35d1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.115",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "40e65843bac69cff",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.117",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5767a78b62c7b3d9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.118",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d988f2b46106f389",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.116",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c28da351e967c4ec",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.119",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a21335a2385f3455",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.120",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ef013735c572280f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.121",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "710384aa765b43e6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.122",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c6213f3ab55a437b",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.123",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a35f78fd46e21a41",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.114",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7ca7c3fd2fa06710",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.104",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "5f6f023ac1a286c1",
        "type": "ui_group",
        "name": "Database F6 IED8 IN",
        "tab": "72c45d6c70476086",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "791bb85c771ae39b",
        "type": "sqlitedb",
        "db": "/tmp/pi_f6_ied8",
        "mode": "RWC"
    },
    {
        "id": "156ab8558b42203c",
        "type": "ui_group",
        "name": "Sensors",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "34b06c75b9d9fe96",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.123",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a66ed02477ea9ad1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.122",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "74d191f1f95eb763",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.121",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "01816813bf40666e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.120",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "0ea6c956340eb090",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.119",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8ffe97062f8234c6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.116",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8ffd9e20872929a1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.118",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5c2796b7ec31e16b",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.117",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ccaca6c7eef27c2a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.115",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "268861b1ae4dfc42",
        "type": "ui_group",
        "name": "Read Result",
        "tab": "cb4e101743b81a1b",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "62dea759376ed5ea",
        "type": "sqlitedb",
        "db": "/tmp/sqlite2",
        "mode": "RWC"
    },
    {
        "id": "098150522bc0e162",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.114",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "72c45d6c70476086",
        "type": "ui_tab",
        "name": "Database F6 IED8 IN",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cb4e101743b81a1b",
        "type": "ui_tab",
        "name": "Database F6 IED8 OUT",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b82910448b6f9f09",
        "type": "modbus-client",
        "name": "PyModbus Server",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.200",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "9625068913f636a7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.123",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "42b0fd2f60deece6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.122",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ee99a1de8d7f798e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.121",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f027049e5dd6eccf",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.120",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "bd9869bd188decea",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.119",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "1ee4151c87a20f87",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.116",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b2327fda1f1fcad4",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.118",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f3b57694e526b302",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.117",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "928012c9667198db",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.114",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "0762864b10a69549",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.114",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c661942b44deee32",
        "type": "modbus-client",
        "name": "PyModbus Server",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.200",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "9fa04bf3b72bc2e7",
        "type": "ui_group",
        "name": "IED8 CB Manual Control",
        "tab": "e697b67e850e57c0",
        "order": 3,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "f26433a1fa586253",
        "type": "modbus-client",
        "name": "PyModbus Server",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.200",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "a8cf692cc3033ec1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.115",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c780804574035f33",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.124",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b75c2e5d44c8c685",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.123",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "6f3d438ec2dfc7bb",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.122",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "3abdb6fbc2437e51",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.113",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c1a3a17b7fb52573",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.120",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "28dd6d951f6889f1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.119",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a9109174f89c9db7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.116",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "64d2a851e3b6ce54",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.118",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "39ca2212f01664f2",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.117",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7154d24ad045638a",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "global.set('voltage1', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e73b6c88d6e2ba80",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "var obtainV = global.get(\"voltage1\");\nmsg.payload = obtainV;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 180,
        "wires": [
            [
                "092154df22317cb3"
            ]
        ]
    },
    {
        "id": "092154df22317cb3",
        "type": "debug",
        "z": "4a19314f62e81afa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 180,
        "wires": []
    },
    {
        "id": "94397d37332d6d95",
        "type": "inject",
        "z": "4a19314f62e81afa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 180,
        "wires": [
            [
                "e73b6c88d6e2ba80"
            ]
        ]
    },
    {
        "id": "3a36d1263120f52f",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "global.set('voltage2', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "e5da23a0a71e09f0",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "var obtainV2 = global.get(\"voltage2\");\nmsg.payload = obtainV2;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "69b8faaab8727838"
            ]
        ]
    },
    {
        "id": "69b8faaab8727838",
        "type": "debug",
        "z": "4a19314f62e81afa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 240,
        "wires": []
    },
    {
        "id": "e848fb630272c345",
        "type": "inject",
        "z": "4a19314f62e81afa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 240,
        "wires": [
            [
                "e5da23a0a71e09f0"
            ]
        ]
    },
    {
        "id": "b1c04d8cb1ebd895",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "global.set('voltage3', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "9f2287e78a2bbf77",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "var obtainV3 = global.get(\"voltage3\");\nmsg.payload = obtainV3;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 300,
        "wires": [
            [
                "8d6317d28f469c6f"
            ]
        ]
    },
    {
        "id": "8d6317d28f469c6f",
        "type": "debug",
        "z": "4a19314f62e81afa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 300,
        "wires": []
    },
    {
        "id": "83e8e96cfcfad9d2",
        "type": "inject",
        "z": "4a19314f62e81afa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 300,
        "wires": [
            [
                "9f2287e78a2bbf77"
            ]
        ]
    },
    {
        "id": "15dc01f67079d37f",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "global.set('current1', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "4672e8aa38de9676",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "var obtainI = global.get(\"current1\");\nmsg.payload = obtainI;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 360,
        "wires": [
            [
                "47f36de7b7b98581"
            ]
        ]
    },
    {
        "id": "47f36de7b7b98581",
        "type": "debug",
        "z": "4a19314f62e81afa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 360,
        "wires": []
    },
    {
        "id": "8765e2d99ab74f13",
        "type": "inject",
        "z": "4a19314f62e81afa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 360,
        "wires": [
            [
                "4672e8aa38de9676"
            ]
        ]
    },
    {
        "id": "71096e97e0187b1b",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "global.set('current2', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "42f5f530e270017f",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "var obtainI2 = global.get(\"current2\");\nmsg.payload = obtainI2;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 420,
        "wires": [
            [
                "e8af2a358325d684"
            ]
        ]
    },
    {
        "id": "e8af2a358325d684",
        "type": "debug",
        "z": "4a19314f62e81afa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 420,
        "wires": []
    },
    {
        "id": "604c88e4f43356e8",
        "type": "inject",
        "z": "4a19314f62e81afa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 420,
        "wires": [
            [
                "42f5f530e270017f"
            ]
        ]
    },
    {
        "id": "338b32153a6d8053",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "global.set('current3', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "f8b981efad16fa4a",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "var obtainI3 = global.get(\"current3\");\nmsg.payload = obtainI3;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 480,
        "wires": [
            [
                "c66379fc1a8be617"
            ]
        ]
    },
    {
        "id": "c66379fc1a8be617",
        "type": "debug",
        "z": "4a19314f62e81afa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 480,
        "wires": []
    },
    {
        "id": "e5c14936b21a5684",
        "type": "inject",
        "z": "4a19314f62e81afa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 480,
        "wires": [
            [
                "f8b981efad16fa4a"
            ]
        ]
    },
    {
        "id": "0bb97ea8cde39ad5",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "global.set('Frequency', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "550a0d0d5bc6e704",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "var obtainF = global.get(\"Frequency\");\nmsg.payload = obtainF;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 540,
        "wires": [
            [
                "be81d2ccae67198d"
            ]
        ]
    },
    {
        "id": "be81d2ccae67198d",
        "type": "debug",
        "z": "4a19314f62e81afa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 540,
        "wires": []
    },
    {
        "id": "309256f879aacd7a",
        "type": "inject",
        "z": "4a19314f62e81afa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 540,
        "wires": [
            [
                "550a0d0d5bc6e704"
            ]
        ]
    },
    {
        "id": "5b3e2f80d67c7ab2",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "global.set('voltageN', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "65cdbe1f42c78220",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "var obtainVn = global.get(\"voltageN\");\nmsg.payload = obtainVn;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 600,
        "wires": [
            [
                "5ed2cc3b43f8b6ec"
            ]
        ]
    },
    {
        "id": "5ed2cc3b43f8b6ec",
        "type": "debug",
        "z": "4a19314f62e81afa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 600,
        "wires": []
    },
    {
        "id": "b80b207813b95934",
        "type": "inject",
        "z": "4a19314f62e81afa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 600,
        "wires": [
            [
                "65cdbe1f42c78220"
            ]
        ]
    },
    {
        "id": "d6691deac30c88a7",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "global.set('currentN', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "3faf3676a31f9fe1",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "var obtainIn = global.get(\"currentN\");\nmsg.payload = obtainIn;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 660,
        "wires": [
            [
                "6f357563d43f9d9a"
            ]
        ]
    },
    {
        "id": "6f357563d43f9d9a",
        "type": "debug",
        "z": "4a19314f62e81afa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 660,
        "wires": []
    },
    {
        "id": "ec7b530860cdc8c3",
        "type": "inject",
        "z": "4a19314f62e81afa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 660,
        "wires": [
            [
                "3faf3676a31f9fe1"
            ]
        ]
    },
    {
        "id": "e8a35aaad2a17977",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "global.set('f6_load', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "afa489159f3515f6",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "",
        "func": "var obtain_load = global.get(\"f6_load\");\nmsg.payload = obtain_load;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 720,
        "wires": [
            [
                "8f5e38859802cf78"
            ]
        ]
    },
    {
        "id": "8f5e38859802cf78",
        "type": "debug",
        "z": "4a19314f62e81afa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 720,
        "wires": []
    },
    {
        "id": "fd2b4915487cd406",
        "type": "inject",
        "z": "4a19314f62e81afa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 720,
        "wires": [
            [
                "afa489159f3515f6"
            ]
        ]
    },
    {
        "id": "cab664b9584057af",
        "type": "inject",
        "z": "4a19314f62e81afa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 730,
        "y": 780,
        "wires": [
            [
                "447c213657091e54"
            ]
        ]
    },
    {
        "id": "447c213657091e54",
        "type": "function",
        "z": "4a19314f62e81afa",
        "name": "Calculating Load",
        "func": "var obtainI = global.get(\"current1\");\nvar obtainI2 = global.get(\"current2\");\nvar obtainI3 = global.get(\"current3\");\nvar obtainL = global.get(\"f6_load\");\n\nvar f6_current1 = obtainI*(obtainL/45);\nvar f6_current2 = obtainI2*(obtainL/45);\nvar f6_current3 = obtainI3*(obtainL/45);\n\nglobal.set('f6_current1', String(f6_current1))\nglobal.set('f6_current2', String(f6_current2))\nglobal.set('f6_current3', String(f6_current3))\n\nmsg.payload = f6_current2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 780,
        "wires": [
            [
                "1a2198eddc0cc27b"
            ]
        ]
    },
    {
        "id": "1a2198eddc0cc27b",
        "type": "debug",
        "z": "4a19314f62e81afa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 780,
        "wires": []
    },
    {
        "id": "3ed334fb1c03ac93",
        "type": "mqtt out",
        "z": "a2471bbd3d962209",
        "name": "MQTT CB8 Channel",
        "topic": "IED8_to_CB/CB8_status",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a35f78fd46e21a41",
        "x": 660,
        "y": 360,
        "wires": []
    },
    {
        "id": "71afdb784211a6f5",
        "type": "debug",
        "z": "a2471bbd3d962209",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 320,
        "wires": []
    },
    {
        "id": "bd23e465d32f65a9",
        "type": "function",
        "z": "a2471bbd3d962209",
        "name": "CB Decision",
        "func": "var obtainV = global.get('voltage1');\nvar obtainV2 = global.get(\"voltage2\");\nvar obtainV3 = global.get(\"voltage3\");\nvar obtainI = global.get(\"f6_current1\");\nvar obtainI2 = global.get(\"f6_current2\");\nvar obtainI3 = global.get(\"f6_current3\");\nvar obtainF = global.get(\"Frequency\");\nvar obtainVn = global.get(\"voltageN\");\nvar obtainIn = global.get(\"currentN\");\nvar cb_decision;\nvar ov_status;\nvar oc_status;\nvar switch_status= global.get(\"switch8\");\nvar scadaswitch_status= global.get(\"scadaswitch8\");\n\nif (obtainV > 250 || obtainV2 > 250 || obtainV3 > 250)\n{\n    ov_status = 1;\n} else \n{\n    ov_status = 0;\n}\n\nif (obtainI > 5 || obtainI2 > 5 || obtainI3 > 5)\n{\n    oc_status = 1;\n} else \n{\n    oc_status = 0;\n}\n\n\nif  (ov_status == 1 && oc_status == 1 && obtainF > 53)\n {\n    cb_decision = 'Open';\n }\n    else if(ov_status == 1 && oc_status == 1)\n {\n    cb_decision = 'Open';\n } \n    else if(oc_status == 1 && obtainF > 53)\n {\n    cb_decision = 'Open';\n } \n    else if(ov_status == 1 && obtainF > 53)\n {\n    cb_decision = 'Open';\n } \n    else if(oc_status == 1 && obtainF > 53)\n {\n    cb_decision = 'Open';\n } \n    else if (ov_status == 1)\n {\n    cb_decision = 'Open';\n }\n    else if (obtainF > 55)\n {\n    cb_decision = 'Open';\n }\n    else if  (oc_status == 1)\n {\n    cb_decision = 'Open';\n }\n   else if (scadaswitch_status== \"1\" || switch_status== \"1\") \n{\n    cb_decision = 'Open';       \n}\n    else {\n    cb_decision = 'Closed';\n }\n\nglobal.set('cb_status', cb_decision)\n\nvar a = global.get('event');\nvar b = global.get('cb_status');\nvar c = \"Event: \" + a + \" | CB Status: \" + b\n\nmsg.payload = c;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 360,
        "wires": [
            [
                "3ed334fb1c03ac93",
                "71afdb784211a6f5"
            ]
        ]
    },
    {
        "id": "4ba04f9bb9cd41eb",
        "type": "function",
        "z": "a2471bbd3d962209",
        "name": "",
        "func": "msg.payload = { \n    value: msg.payload, \n    'fc': 6, \n    'unitid': 2, \n    'address': 25 , \n    'quantity': 1 \n    \n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 280,
        "wires": [
            [
                "9b7c551478d2882b",
                "99eee10138e8692c"
            ]
        ]
    },
    {
        "id": "88c8bb93dae162c6",
        "type": "debug",
        "z": "a2471bbd3d962209",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 280,
        "wires": []
    },
    {
        "id": "9b7c551478d2882b",
        "type": "modbus-flex-write",
        "z": "a2471bbd3d962209",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "c661942b44deee32",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 870,
        "y": 280,
        "wires": [
            [
                "88c8bb93dae162c6"
            ],
            []
        ]
    },
    {
        "id": "8a1a58fc2cb2efa3",
        "type": "function",
        "z": "a2471bbd3d962209",
        "name": "Calculate Total Power",
        "func": "var obtainV = global.get('voltage1');\nvar obtainV2 = global.get(\"voltage2\");\nvar obtainV3 = global.get(\"voltage3\");\nvar obtainI = global.get(\"f6_current1\");\nvar obtainI2 = global.get(\"f6_current2\");\nvar obtainI3 = global.get(\"f6_current3\");\nvar power1;\nvar power2;\nvar power3;\nvar total_power;\n\npower1 = obtainV*obtainI;\npower2 = obtainV2*obtainI2;\npower3 = obtainV3*obtainI3;\ntotal_power = power1 + power2 + power3;\n\nmsg.payload = total_power;\nglobal.set('total_power', total_power)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 280,
        "wires": [
            [
                "4ba04f9bb9cd41eb"
            ]
        ]
    },
    {
        "id": "99eee10138e8692c",
        "type": "debug",
        "z": "a2471bbd3d962209",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 240,
        "wires": []
    },
    {
        "id": "d858d474361e9b7f",
        "type": "function",
        "z": "bcccda1a284b21ed",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;\n\n//if(msg.payload > '220')\n //{\n//      msg.payload = 'value exceeded';\n// } \n// else {\n //    msg.payload = msg.payload;\n// }\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 320,
        "wires": [
            [
                "1fd66227ad622367"
            ]
        ]
    },
    {
        "id": "529a0fd815bae9a3",
        "type": "function",
        "z": "bcccda1a284b21ed",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 380,
        "wires": [
            [
                "1e1702dce07d6b51"
            ]
        ]
    },
    {
        "id": "3cb6fa7e216a2750",
        "type": "function",
        "z": "bcccda1a284b21ed",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 440,
        "wires": [
            [
                "f424607631ce2bd6"
            ]
        ]
    },
    {
        "id": "0c597139c9088652",
        "type": "function",
        "z": "bcccda1a284b21ed",
        "name": "",
        "func": "var d = global.get('f6_current1');\nmsg.payload = parseFloat(d).toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 500,
        "wires": [
            [
                "0a55d2cc723196a1"
            ]
        ]
    },
    {
        "id": "3fe575d0c9bab06f",
        "type": "function",
        "z": "bcccda1a284b21ed",
        "name": "",
        "func": "var d = global.get('f6_current2');\nmsg.payload = parseFloat(d).toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 560,
        "wires": [
            [
                "53b6905fbef126f2"
            ]
        ]
    },
    {
        "id": "41c4c068fe61847d",
        "type": "function",
        "z": "bcccda1a284b21ed",
        "name": "",
        "func": "var d = global.get('f6_current3');\nmsg.payload = parseFloat(d).toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 620,
        "wires": [
            [
                "fa8bcd0fd9fb7b79"
            ]
        ]
    },
    {
        "id": "18cdfc949366df0e",
        "type": "function",
        "z": "bcccda1a284b21ed",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 680,
        "wires": [
            [
                "60d8e4a1beef465f"
            ]
        ]
    },
    {
        "id": "6acb6f59e6bec65e",
        "type": "function",
        "z": "bcccda1a284b21ed",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 740,
        "wires": [
            [
                "deb40026034e4139"
            ]
        ]
    },
    {
        "id": "d41b30a13ccb08c8",
        "type": "function",
        "z": "bcccda1a284b21ed",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 800,
        "wires": [
            [
                "4c5e65af5970a77c"
            ]
        ]
    },
    {
        "id": "1fd66227ad622367",
        "type": "ui_text",
        "z": "bcccda1a284b21ed",
        "group": "6609460f9920d375",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase A Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "x": 1100,
        "y": 320,
        "wires": []
    },
    {
        "id": "1e1702dce07d6b51",
        "type": "ui_text",
        "z": "bcccda1a284b21ed",
        "group": "6609460f9920d375",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase B Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "x": 1110,
        "y": 380,
        "wires": []
    },
    {
        "id": "f424607631ce2bd6",
        "type": "ui_text",
        "z": "bcccda1a284b21ed",
        "group": "6609460f9920d375",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase C Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "x": 1110,
        "y": 440,
        "wires": []
    },
    {
        "id": "0a55d2cc723196a1",
        "type": "ui_text",
        "z": "bcccda1a284b21ed",
        "group": "6609460f9920d375",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase A Current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1100,
        "y": 500,
        "wires": []
    },
    {
        "id": "53b6905fbef126f2",
        "type": "ui_text",
        "z": "bcccda1a284b21ed",
        "group": "6609460f9920d375",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase B Current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1110,
        "y": 560,
        "wires": []
    },
    {
        "id": "fa8bcd0fd9fb7b79",
        "type": "ui_text",
        "z": "bcccda1a284b21ed",
        "group": "6609460f9920d375",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase C current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1100,
        "y": 620,
        "wires": []
    },
    {
        "id": "60d8e4a1beef465f",
        "type": "ui_text",
        "z": "bcccda1a284b21ed",
        "group": "6609460f9920d375",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Frequency",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "x": 1090,
        "y": 680,
        "wires": []
    },
    {
        "id": "deb40026034e4139",
        "type": "ui_text",
        "z": "bcccda1a284b21ed",
        "group": "6609460f9920d375",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Neutral Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "x": 1100,
        "y": 740,
        "wires": []
    },
    {
        "id": "4c5e65af5970a77c",
        "type": "ui_text",
        "z": "bcccda1a284b21ed",
        "group": "6609460f9920d375",
        "order": 17,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Neutral Current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1100,
        "y": 800,
        "wires": []
    },
    {
        "id": "725bcba377efe082",
        "type": "function",
        "z": "bcccda1a284b21ed",
        "name": "IED Functionality",
        "func": "\nvar obtainV = global.get('voltage1');\nvar obtainV2 = global.get(\"voltage2\");\nvar obtainV3 = global.get(\"voltage3\");\n//var obtainI = global.get(\"current1\");\n//var obtainI2 = global.get(\"current2\");\n//var obtainI3 = global.get(\"current3\");\nvar obtainF = global.get(\"Frequency\");\nvar obtainVn = global.get(\"voltageN\");\nvar obtainIn = global.get(\"currentN\");\nvar cb_status;\nvar event;\nvar ov_status;\nvar oc_status;\nvar phasefaultV;\nvar phasefaultI;\nvar obtainI = global.get('f6_current1');\nvar obtainI2 = global.get('f6_current2');\nvar obtainI3 = global.get('f6_current3');\nvar switch_status= global.get(\"switch8\");\nvar scadaswitch_status= global.get(\"scadaswitch8\");\n\nif (obtainV > 250 || obtainV2 > 250 || obtainV3 > 250)\n{\n    ov_status = 1;\n   \n} else \n{\n    ov_status = 0;\n}\n\nif (obtainI > 5 || obtainI2 > 5 || obtainI3 > 5)\n{\n    oc_status = 1;\n    \n} else \n{\n    oc_status = 0;\n}\n\nif  (ov_status == 1 && oc_status == 1 && obtainF > 53)\n {\n    cb_status = 'Open';\n    event  = 'OC, OV & OF ';\n }\n    else if(ov_status == 1 && oc_status == 1)\n {\n    cb_status = 'Open';\n    event  = 'OV & OC';\n } \n    else if(oc_status == 1 && obtainF > 53)\n {\n    cb_status = 'Open';\n    event  = 'OC & OF';\n } \n    else if(ov_status == 1 && obtainF > 53)\n {\n    cb_status = 'Open';\n    event  = 'OV & OF';\n } \n    else if(oc_status == 1 && obtainF > 53)\n {\n    cb_status = 'Open';\n    event  = 'OC & OF';\n } \n    else if (ov_status == 1)\n {\n    cb_status = 'Open';\n    event  = 'Overvoltage';\n }\n    else if (obtainF > 55)\n {\n    cb_status = 'Open';\n    event  = 'Over Frequency';\n }\n    else if  (oc_status == 1)\n {\n     cb_status = 'Open';\n     event  = 'Overcurrent';\n }\n    else if (scadaswitch_status== \"1\" || switch_status== \"1\") \n{\n    cb_decision = 'Open';     \n    event  = 'Manual Open';\n}\n    else {\n    cb_status= 'Closed';\n    event = 'Clear';\n }\n  global.set('F6CBEvent', event)\n \n// phase event voltage\nif (obtainV > 250 && obtainV2 > 250 && obtainV3 > 250)\n {\n     phasefaultV= \" Phase A,B,C \";\n }\nelse if (obtainV > 250 && obtainV2 <= 250 && obtainV3 <= 250)\n{\n    phasefaultV= \" Phase A  \";\n    \n} else if(obtainV > 250 && obtainV2 > 250 && obtainV3 <= 250)\n{\n  phasefaultV= \" Phase A,B  \";\n}\nelse if(obtainV <= 250 && obtainV2 > 250 && obtainV3 > 250)\n{\n  phasefaultV= \" Phase B,C  \";\n}\nelse if(obtainV > 250 && obtainV2 <= 250 && obtainV3 > 250)\n{\n  phasefaultV= \" Phase A,C  \";\n}\nelse if(obtainV <= 250 && obtainV2 > 250 && obtainV3 <= 250)\n{\n  phasefaultV= \" Phase B  \";\n}\nelse if(obtainV <= 250 && obtainV2 <= 250 && obtainV3 > 250)\n{\n  phasefaultV= \" Phase C  \";\n}\nelse \n{\n  phasefaultV= \" Clear \";\n}\n\n// phase fault current \n\nif (obtainI > 5 && obtainI2 > 5 && obtainI3 > 5)\n {\n     phasefaultI= \" Phase A,B,C \";\n }\nelse if (obtainI > 5 && obtainI2 <= 5 && obtainI3 <= 5)\n{\n    phasefaultI= \" Phase A  \";\n    \n} else if(obtainI > 5 && obtainVI > 5 && obtainI3 <= 5)\n{\n  phasefaultI= \" Phase A,B  \";\n}\nelse if(obtainI <= 5 && obtainI2 > 5 && obtainI3 > 5)\n{\n  phasefaultI= \" Phase B,C  \";\n}\nelse if(obtainI > 5 && obtainI2 <= 5 && obtainI3 > 5)\n{\n  phasefaultI= \" Phase C,A \";\n}\nelse if(obtainI <= 5 && obtainI2 > 5 && obtainI3 <= 5)\n{\n  phasefaultI= \" Phase B  \";\n}\nelse if(obtainI <= 5 && obtainI2 <= 5 && obtainI3 > 5)\n{\n  phasefaultI= \" Phase C \";\n}\nelse \n{\n  phasefaultI= \" Clear \";\n}\n\nglobal.set('event', event)\n\n \ntableData = flow.get(\"savedData\") || [] ;\n\ntableData.unshift({\n    \"Timestamp\":new Date(msg.payload).toLocaleString(),\n    \"CB Status\": cb_status,\n    \"Event\": event ,\n    \"phasefaultV\": phasefaultV ,\n    \"phasefaultI\": phasefaultI ,\n    }\n); \n\nif(tableData.length >8) tableData.pop ();\n    \nmsg.payload = tableData;\n\nflow.set(\"savedData\", tableData);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 737,
        "y": 941,
        "wires": [
            [
                "3e47e65795c86f89"
            ]
        ]
    },
    {
        "id": "56bcbb4ceaaece80",
        "type": "inject",
        "z": "bcccda1a284b21ed",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 477,
        "y": 941,
        "wires": [
            [
                "725bcba377efe082"
            ]
        ]
    },
    {
        "id": "848a1f0da2d0e4e8",
        "type": "inject",
        "z": "bcccda1a284b21ed",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 457,
        "y": 901,
        "wires": [
            [
                "2f5942efacdc1344"
            ]
        ]
    },
    {
        "id": "2f5942efacdc1344",
        "type": "change",
        "z": "bcccda1a284b21ed",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "savedData",
                "pt": "flow",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 737,
        "y": 901,
        "wires": [
            []
        ]
    },
    {
        "id": "3e47e65795c86f89",
        "type": "ui_table",
        "z": "bcccda1a284b21ed",
        "group": "56e06b397d8f4cf9",
        "name": "",
        "order": 1,
        "width": "12",
        "height": "5",
        "columns": [
            {
                "field": "Timestamp",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "CB Status",
                "title": "CB state",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Event",
                "title": "Fault Event",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "phasefaultV",
                "title": "phase fault voltage",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "phasefaultI",
                "title": "phase fault current",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 950,
        "y": 940,
        "wires": []
    },
    {
        "id": "c2421bee5e9621ff",
        "type": "inject",
        "z": "eebb0b65b2e98377",
        "name": "create database table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "CREATE TABLE Input_data_ied8(TIMESTAMP TEXT NOT NULL,VOLTAGE1 INT NOT NULL, VOLTAGE2 INT NOT NULL,VOLTAGE3 INT NOT NULL,CURRENT1 INT NOT NULL, CURRENT2 INT NOT NULL, CURRENT3 INT NOT NULL, FREQUENCY INT NOT NULL, VOLTAGEN INT, CURRENTN INT, TOTAL_POWER INT NOT NULL)",
        "payloadType": "date",
        "x": 380,
        "y": 140,
        "wires": [
            [
                "6e6991d2a218d723"
            ]
        ]
    },
    {
        "id": "f1f9aeb7a35b2bf9",
        "type": "debug",
        "z": "eebb0b65b2e98377",
        "name": "database_out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 200,
        "wires": []
    },
    {
        "id": "a35ad0a6b2c97059",
        "type": "inject",
        "z": "eebb0b65b2e98377",
        "name": "delete records",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "DELETE FROM Input_data_ied8 WHERE TIMESTAMP>=0",
        "payloadType": "date",
        "x": 350,
        "y": 200,
        "wires": [
            [
                "6e6991d2a218d723"
            ]
        ]
    },
    {
        "id": "911489584fe7a3e0",
        "type": "inject",
        "z": "eebb0b65b2e98377",
        "name": "show RECORDS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "SELECT * FROM Input_data_ied8 ORDER BY TIMESTAMP DESC LIMIT 100",
        "payloadType": "date",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "afb5e3ec5cb319e9"
            ]
        ]
    },
    {
        "id": "755c10daf6086df2",
        "type": "ui_template",
        "z": "eebb0b65b2e98377",
        "group": "5f6f023ac1a286c1",
        "name": "Database F6 IED8 IN",
        "order": 1,
        "width": "18",
        "height": "15",
        "format": "<style>\ntable, th, td\n{\n    height:10px;\n    width:900px;\n    background:lightblue;\n    border: 1px solid black;\n    border-collapse: collapse;\n}\n</style>\n<div class=\"table\">\n<table style=\"width:100%\">\n  <tr>\n    <th>TIMESTAMP</th>\n    <th>V1</th>\n    <th>V2</th>\n    <th>V3</th>\n    <th>I1</th>\n    <th>I2</th>\n    <th>I3</th>\n    <th>FREQ</th>\n    <th>VOLTAGEN</th>\n    <th>CURRENTN</th>\n    <th>TOTAL_POWER</th>\n  \n  </tr>\n  <tr ng-repeat=\"x in msg.payload\">\n    <td style=\"text-align:center\">{{msg.payload[$index].TIMESTAMP}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].VOLTAGE1}}</td> \n    <td style=\"text-align:center\">{{msg.payload[$index].VOLTAGE2}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].VOLTAGE3}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].CURRENT1}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].CURRENT2}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].CURRENT3}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].FREQUENCY}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].VOLTAGEN}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].CURRENTN}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].TOTAL_POWER}}</td>\n    \n  </tr>\n</table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 880,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6e6991d2a218d723",
        "type": "sqlite",
        "z": "eebb0b65b2e98377",
        "mydb": "791bb85c771ae39b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database F6 IED8 IN",
        "x": 660,
        "y": 200,
        "wires": [
            [
                "f1f9aeb7a35b2bf9"
            ]
        ]
    },
    {
        "id": "5133149b7c91563a",
        "type": "inject",
        "z": "eebb0b65b2e98377",
        "name": "Test Data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 320,
        "wires": [
            [
                "2558f98583e8149b"
            ]
        ]
    },
    {
        "id": "2558f98583e8149b",
        "type": "function",
        "z": "eebb0b65b2e98377",
        "name": "write query",
        "func": "var timestamp = new Date().toLocaleString();\ntimestamp=timestamp.substring(0, 21);\nvar voltage1=global.get(\"voltage1\");\nvar voltage2=global.get(\"voltage2\");\nvar voltage3=global.get(\"voltage3\");\nvar current1=global.get(\"current1\");\nvar current2=global.get(\"current2\");\nvar current3=global.get(\"current3\");\nvar frequency=global.get(\"Frequency\");\nvar voltageN=global.get(\"voltageN\");\nvar currentN=global.get(\"currentN\");\nvar total_power=global.get(\"total_power\");\n//put data into json string\n\nmsg=\"( timestamp,voltage1,voltage2,voltage3,current1,current2,current3,Frequency,voltageN,currentN,total_power) values(\\'\"+timestamp +\"\\',\" + voltage1 + \",\" + voltage2 +\",\" + voltage3 + \",\" + current1 + \",\" + current2 + \",\" + current3 + \",\" + frequency + \",\" + voltageN + \",\" + currentN + \",\" + total_power  + \")\";\nvar topic=\"INSERT INTO Input_data_ied8 \" +msg;\nvar msg1={};\nmsg1.topic=topic;\nmsg1.payload=timestamp;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 320,
        "wires": [
            [
                "5b87437f62a4422d",
                "2f48faaa8e01ec57"
            ]
        ]
    },
    {
        "id": "5b87437f62a4422d",
        "type": "debug",
        "z": "eebb0b65b2e98377",
        "name": "sql out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "afb5e3ec5cb319e9",
        "type": "sqlite",
        "z": "eebb0b65b2e98377",
        "mydb": "791bb85c771ae39b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database F6 IED8 IN",
        "x": 660,
        "y": 80,
        "wires": [
            [
                "755c10daf6086df2"
            ]
        ]
    },
    {
        "id": "564f0608d3afc629",
        "type": "catch",
        "z": "eebb0b65b2e98377",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 340,
        "y": 480,
        "wires": [
            [
                "79530ec80374c7a6",
                "a55b9e543dcce61b"
            ]
        ]
    },
    {
        "id": "79530ec80374c7a6",
        "type": "debug",
        "z": "eebb0b65b2e98377",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 500,
        "wires": []
    },
    {
        "id": "6e88a1ff43cfa669",
        "type": "ui_text",
        "z": "eebb0b65b2e98377",
        "group": "5f6f023ac1a286c1",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 810,
        "y": 420,
        "wires": []
    },
    {
        "id": "a55b9e543dcce61b",
        "type": "function",
        "z": "eebb0b65b2e98377",
        "name": "sql errors",
        "func": "var payload=msg.error.message;\nmsg.payload = payload +\" timestamp \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 420,
        "wires": [
            [
                "6e88a1ff43cfa669"
            ]
        ]
    },
    {
        "id": "e416c6b6ee7a1a83",
        "type": "inject",
        "z": "eebb0b65b2e98377",
        "name": "Drop Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "drop table Input_data_ied8",
        "payloadType": "date",
        "x": 340,
        "y": 260,
        "wires": [
            [
                "6e6991d2a218d723"
            ]
        ]
    },
    {
        "id": "67576199c0593986",
        "type": "function",
        "z": "eebb0b65b2e98377",
        "name": "Clear errors",
        "func": "node.error(\"\",msg);//clear error\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "5e3516589ef13180",
        "type": "inject",
        "z": "eebb0b65b2e98377",
        "name": "clear errors",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 350,
        "y": 580,
        "wires": [
            [
                "67576199c0593986"
            ]
        ]
    },
    {
        "id": "2f48faaa8e01ec57",
        "type": "delay",
        "z": "eebb0b65b2e98377",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 820,
        "y": 260,
        "wires": [
            [
                "6e6991d2a218d723"
            ]
        ]
    },
    {
        "id": "20ca0e0f62e2a31b",
        "type": "inject",
        "z": "260c1df35b77625f",
        "name": "create database table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "CREATE TABLE output_data_ied8(TIMESTAMP TEXT NOT NULL,F6CBStatus TEXT NOT NULL,F6CBEvent TEXT NOT NULL)",
        "payloadType": "date",
        "x": 260,
        "y": 160,
        "wires": [
            [
                "e10f455758474bf8"
            ]
        ]
    },
    {
        "id": "88bcaa34b71d3526",
        "type": "debug",
        "z": "260c1df35b77625f",
        "name": "database_out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 220,
        "wires": []
    },
    {
        "id": "da3b587559eaa140",
        "type": "inject",
        "z": "260c1df35b77625f",
        "name": "delete records",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "DELETE FROM output_data_ied8 WHERE TIMESTAMP>=0",
        "payloadType": "date",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "e10f455758474bf8"
            ]
        ]
    },
    {
        "id": "93eab0e55a472a32",
        "type": "inject",
        "z": "260c1df35b77625f",
        "name": "show RECORDS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "SELECT * FROM output_data_ied8 ORDER BY TIMESTAMP DESC LIMIT 100",
        "payloadType": "date",
        "x": 250,
        "y": 100,
        "wires": [
            [
                "495bea8c42db3e96"
            ]
        ]
    },
    {
        "id": "f21849e9d85cdc34",
        "type": "ui_template",
        "z": "260c1df35b77625f",
        "group": "268861b1ae4dfc42",
        "name": "Database F6 IED8 OUT",
        "order": 1,
        "width": "18",
        "height": "15",
        "format": "<style>\ntable, th, td\n{\n    height:10px;\n    width:900px;\n    background:lightblue;\n    border: 1px solid black;\n    border-collapse: collapse;\n}\n</style>\n<div class=\"table\">\n<table style=\"width:100%\">\n  <tr>\n    <th>TIMESTAMP</th>\n    <th>F6CBStatus</th>\n    <th>F6CBEvent</th>\n    \n  </tr>\n  <tr ng-repeat=\"x in msg.payload\">\n    <td style=\"text-align:center\">{{msg.payload[$index].TIMESTAMP}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].F6CBStatus}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].F6CBEvent}}</td>\n\n  </tr>\n</table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 850,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "e10f455758474bf8",
        "type": "sqlite",
        "z": "260c1df35b77625f",
        "mydb": "791bb85c771ae39b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database F6 IED8 OUT",
        "x": 590,
        "y": 220,
        "wires": [
            [
                "88bcaa34b71d3526"
            ]
        ]
    },
    {
        "id": "1a5da528a3ab81c5",
        "type": "inject",
        "z": "260c1df35b77625f",
        "name": "Test Data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 400,
        "wires": [
            [
                "f025b7d9bcc0a9fa"
            ]
        ]
    },
    {
        "id": "f025b7d9bcc0a9fa",
        "type": "function",
        "z": "260c1df35b77625f",
        "name": "write query",
        "func": "var timestamp = new Date().toLocaleString();\ntimestamp=timestamp.substring(0, 21);\nvar F6CBStatus=global.get(\"F6CBStatus\");\nvar F6CBEvent=global.get(\"F6CBEvent\");\n\n//put data into json string\n\nmsg=\"(timestamp,F6CBStatus,F6CBEvent) values(\\'\"+timestamp +\"\\',\\'\" + F6CBStatus + \"\\',\\'\" + F6CBEvent + \"\\')\";\nvar topic=\"INSERT INTO output_data_ied8  \" +msg;\nvar msg1={};\nmsg1.topic=topic;\nmsg1.payload=timestamp;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 400,
        "wires": [
            [
                "63fe9f22d45d2602",
                "6bc7f02374b9b2f9"
            ]
        ]
    },
    {
        "id": "63fe9f22d45d2602",
        "type": "debug",
        "z": "260c1df35b77625f",
        "name": "sql out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 400,
        "wires": []
    },
    {
        "id": "495bea8c42db3e96",
        "type": "sqlite",
        "z": "260c1df35b77625f",
        "mydb": "791bb85c771ae39b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database F6 IED8 OUT",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "f21849e9d85cdc34"
            ]
        ]
    },
    {
        "id": "eb4c6fdd1822e040",
        "type": "catch",
        "z": "260c1df35b77625f",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 220,
        "y": 540,
        "wires": [
            [
                "2077f5753c0076f8",
                "a9072786684981ed"
            ]
        ]
    },
    {
        "id": "2077f5753c0076f8",
        "type": "debug",
        "z": "260c1df35b77625f",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 540,
        "wires": []
    },
    {
        "id": "b1e16c9086b4d18e",
        "type": "ui_text",
        "z": "260c1df35b77625f",
        "group": "156ab8558b42203c",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 750,
        "y": 480,
        "wires": []
    },
    {
        "id": "a9072786684981ed",
        "type": "function",
        "z": "260c1df35b77625f",
        "name": "sql errors",
        "func": "var payload=msg.error.message;\nmsg.payload = payload +\" timestamp \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 480,
        "wires": [
            [
                "b1e16c9086b4d18e"
            ]
        ]
    },
    {
        "id": "4441a6b2967971eb",
        "type": "inject",
        "z": "260c1df35b77625f",
        "name": "Drop Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "drop table output_data_ied8",
        "payloadType": "date",
        "x": 220,
        "y": 280,
        "wires": [
            [
                "e10f455758474bf8"
            ]
        ]
    },
    {
        "id": "1554d7cfa3a587ce",
        "type": "function",
        "z": "260c1df35b77625f",
        "name": "Clear errors",
        "func": "node.error(\"\",msg);//clear error\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "04080ea279c39301",
        "type": "inject",
        "z": "260c1df35b77625f",
        "name": "clear errors",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 230,
        "y": 620,
        "wires": [
            [
                "1554d7cfa3a587ce"
            ]
        ]
    },
    {
        "id": "6bc7f02374b9b2f9",
        "type": "delay",
        "z": "260c1df35b77625f",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 760,
        "y": 340,
        "wires": [
            [
                "e10f455758474bf8"
            ]
        ]
    },
    {
        "id": "c68c9de4bdeb8aab",
        "type": "mqtt in",
        "z": "260c1df35b77625f",
        "name": "",
        "topic": "IED8_to_CB/CB8_status",
        "qos": "2",
        "datatype": "auto",
        "broker": "098150522bc0e162",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1050,
        "y": 180,
        "wires": [
            [
                "e63d6caa899c5d82",
                "6bd1220b9d313a6f"
            ]
        ]
    },
    {
        "id": "e63d6caa899c5d82",
        "type": "function",
        "z": "260c1df35b77625f",
        "name": "",
        "func": "global.set('F6CBStatus', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "6bd1220b9d313a6f",
        "type": "debug",
        "z": "260c1df35b77625f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 120,
        "wires": []
    },
    {
        "id": "85f6776e7753b080",
        "type": "modbus-flex-write",
        "z": "c374fe5106ba07da",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "b82910448b6f9f09",
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "x": 1230,
        "y": 500,
        "wires": [
            [
                "38dfad525a0d2347"
            ],
            []
        ]
    },
    {
        "id": "38dfad525a0d2347",
        "type": "debug",
        "z": "c374fe5106ba07da",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 460,
        "wires": []
    },
    {
        "id": "02ab776e3c385f02",
        "type": "comment",
        "z": "c374fe5106ba07da",
        "name": "Sending all Values to SCADA for Monitoring",
        "info": "",
        "x": 310,
        "y": 200,
        "wires": []
    },
    {
        "id": "367c17b02c6167c0",
        "type": "function",
        "z": "c374fe5106ba07da",
        "name": "",
        "func": "msg.payload = { \n    value: msg.payload, \n    \n    'fc': 16, \n    'unitid': 10, \n    'address': 225 , \n    'quantity': 9 \n    \n} \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 580,
        "wires": [
            [
                "85f6776e7753b080"
            ]
        ]
    },
    {
        "id": "1caf0b9cf6c9a25e",
        "type": "inject",
        "z": "a2471bbd3d962209",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 230,
        "y": 280,
        "wires": [
            [
                "8a1a58fc2cb2efa3",
                "bd23e465d32f65a9"
            ]
        ]
    },
    {
        "id": "5774e1e3d0b80e80",
        "type": "comment",
        "z": "a2471bbd3d962209",
        "name": "SCADA Dashboard 's switch",
        "info": "",
        "x": 260,
        "y": 560,
        "wires": []
    },
    {
        "id": "9089d5b6cf6c11fc",
        "type": "comment",
        "z": "a2471bbd3d962209",
        "name": "IED's dashboard switch",
        "info": "",
        "x": 220,
        "y": 460,
        "wires": []
    },
    {
        "id": "c8a299655ff40fa8",
        "type": "ui_switch",
        "z": "a2471bbd3d962209",
        "name": "switch_status",
        "label": "IED8 Circuit breaker 8 switch",
        "tooltip": "",
        "group": "9fa04bf3b72bc2e7",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "payload",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 260,
        "y": 500,
        "wires": [
            [
                "feed163ce7b0af30"
            ]
        ]
    },
    {
        "id": "feed163ce7b0af30",
        "type": "function",
        "z": "a2471bbd3d962209",
        "name": "",
        "func": "global.set('switch8', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "76b10dfd8d3d1206",
        "type": "function",
        "z": "a2471bbd3d962209",
        "name": "",
        "func": "var switch_status = global.get(\"switch8\");\nmsg.payload = switch_status;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 500,
        "wires": [
            [
                "6de88d50ae84cd8e"
            ]
        ]
    },
    {
        "id": "6de88d50ae84cd8e",
        "type": "debug",
        "z": "a2471bbd3d962209",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 500,
        "wires": []
    },
    {
        "id": "48ef7e4c7ee12f25",
        "type": "inject",
        "z": "a2471bbd3d962209",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 630,
        "y": 500,
        "wires": [
            [
                "76b10dfd8d3d1206"
            ]
        ]
    },
    {
        "id": "c37a40d1354185c0",
        "type": "modbus-read",
        "z": "a2471bbd3d962209",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "558",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f26433a1fa586253",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 250,
        "y": 620,
        "wires": [
            [
                "0a7afbcbefd45a37"
            ],
            []
        ]
    },
    {
        "id": "0a7afbcbefd45a37",
        "type": "function",
        "z": "a2471bbd3d962209",
        "name": "",
        "func": "global.set('scadaswitch8', msg.payload)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "f3cf757ed6d23f72",
        "type": "function",
        "z": "a2471bbd3d962209",
        "name": "",
        "func": "var scadaswitch_status = global.get(\"scadaswitch8\");\nmsg.payload = scadaswitch_status;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 620,
        "wires": [
            [
                "b3467edda5dd27f6"
            ]
        ]
    },
    {
        "id": "b3467edda5dd27f6",
        "type": "debug",
        "z": "a2471bbd3d962209",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 620,
        "wires": []
    },
    {
        "id": "7caf9ebf11a92730",
        "type": "inject",
        "z": "a2471bbd3d962209",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 650,
        "y": 620,
        "wires": [
            [
                "f3cf757ed6d23f72"
            ]
        ]
    },
    {
        "id": "996254e173f7ea64",
        "type": "mqtt in",
        "z": "4a19314f62e81afa",
        "name": "",
        "topic": "Matlab_to_IED8/load",
        "qos": "2",
        "datatype": "auto",
        "broker": "a8cf692cc3033ec1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 780,
        "y": 720,
        "wires": [
            [
                "e8a35aaad2a17977"
            ]
        ]
    },
    {
        "id": "54944b0ee514203a",
        "type": "mqtt in",
        "z": "4a19314f62e81afa",
        "name": "",
        "topic": "Matlab_to_IED8/vphase1",
        "qos": "2",
        "datatype": "auto",
        "broker": "c780804574035f33",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 790,
        "y": 180,
        "wires": [
            [
                "7154d24ad045638a"
            ]
        ]
    },
    {
        "id": "01f47eb02e3d154a",
        "type": "mqtt in",
        "z": "4a19314f62e81afa",
        "name": "",
        "topic": "Matlab_to_IED8/vphase2",
        "qos": "2",
        "datatype": "auto",
        "broker": "b75c2e5d44c8c685",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 790,
        "y": 240,
        "wires": [
            [
                "3a36d1263120f52f"
            ]
        ]
    },
    {
        "id": "30821bbb638ca139",
        "type": "mqtt in",
        "z": "4a19314f62e81afa",
        "name": "",
        "topic": "Matlab_to_IED8/vphase3",
        "qos": "2",
        "datatype": "auto",
        "broker": "6f3d438ec2dfc7bb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 790,
        "y": 300,
        "wires": [
            [
                "b1c04d8cb1ebd895"
            ]
        ]
    },
    {
        "id": "06b22b27daf6c883",
        "type": "mqtt in",
        "z": "4a19314f62e81afa",
        "name": "",
        "topic": "Matlab_to_IED8/iphase1",
        "qos": "2",
        "datatype": "auto",
        "broker": "3abdb6fbc2437e51",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 790,
        "y": 360,
        "wires": [
            [
                "15dc01f67079d37f"
            ]
        ]
    },
    {
        "id": "c13951f1260875dc",
        "type": "mqtt in",
        "z": "4a19314f62e81afa",
        "name": "",
        "topic": "Matlab_to_IED8/iphase2",
        "qos": "2",
        "datatype": "auto",
        "broker": "c1a3a17b7fb52573",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 790,
        "y": 420,
        "wires": [
            [
                "71096e97e0187b1b"
            ]
        ]
    },
    {
        "id": "6fdc6cc4261fa07c",
        "type": "mqtt in",
        "z": "4a19314f62e81afa",
        "name": "",
        "topic": "Matlab_to_IED8/iphase3",
        "qos": "2",
        "datatype": "auto",
        "broker": "28dd6d951f6889f1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 790,
        "y": 480,
        "wires": [
            [
                "338b32153a6d8053"
            ]
        ]
    },
    {
        "id": "491cc7a0a93f0eaa",
        "type": "mqtt in",
        "z": "4a19314f62e81afa",
        "name": "",
        "topic": "Matlab_to_IED8/freq",
        "qos": "2",
        "datatype": "auto",
        "broker": "a9109174f89c9db7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 770,
        "y": 540,
        "wires": [
            [
                "0bb97ea8cde39ad5"
            ]
        ]
    },
    {
        "id": "28f89b3e87454d15",
        "type": "mqtt in",
        "z": "4a19314f62e81afa",
        "name": "",
        "topic": "Matlab_to_IED8/voltage_N",
        "qos": "2",
        "datatype": "auto",
        "broker": "64d2a851e3b6ce54",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 790,
        "y": 600,
        "wires": [
            [
                "5b3e2f80d67c7ab2"
            ]
        ]
    },
    {
        "id": "a026f7a11bb818c0",
        "type": "mqtt in",
        "z": "4a19314f62e81afa",
        "name": "",
        "topic": "Matlab_to_IED8/current_N",
        "qos": "2",
        "datatype": "auto",
        "broker": "39ca2212f01664f2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 790,
        "y": 660,
        "wires": [
            [
                "d6691deac30c88a7"
            ]
        ]
    },
    {
        "id": "3abe1464592596e9",
        "type": "mqtt in",
        "z": "bcccda1a284b21ed",
        "name": "",
        "topic": "Matlab_to_IED8/vphase1",
        "qos": "2",
        "datatype": "auto",
        "broker": "c780804574035f33",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 570,
        "y": 320,
        "wires": [
            [
                "d858d474361e9b7f"
            ]
        ]
    },
    {
        "id": "a6a31f0cd70e091a",
        "type": "mqtt in",
        "z": "bcccda1a284b21ed",
        "name": "",
        "topic": "Matlab_to_IED8/vphase2",
        "qos": "2",
        "datatype": "auto",
        "broker": "b75c2e5d44c8c685",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 570,
        "y": 380,
        "wires": [
            [
                "529a0fd815bae9a3"
            ]
        ]
    },
    {
        "id": "4efddeb155206956",
        "type": "mqtt in",
        "z": "bcccda1a284b21ed",
        "name": "",
        "topic": "Matlab_to_IED8/vphase3",
        "qos": "2",
        "datatype": "auto",
        "broker": "6f3d438ec2dfc7bb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "3cb6fa7e216a2750"
            ]
        ]
    },
    {
        "id": "96c5a6d5a5bcb08f",
        "type": "mqtt in",
        "z": "bcccda1a284b21ed",
        "name": "",
        "topic": "Matlab_to_IED8/iphase1",
        "qos": "2",
        "datatype": "auto",
        "broker": "3abdb6fbc2437e51",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 570,
        "y": 500,
        "wires": [
            [
                "0c597139c9088652"
            ]
        ]
    },
    {
        "id": "0b1d97dd4bfbf287",
        "type": "mqtt in",
        "z": "bcccda1a284b21ed",
        "name": "",
        "topic": "Matlab_to_IED8/iphase2",
        "qos": "2",
        "datatype": "auto",
        "broker": "c1a3a17b7fb52573",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 570,
        "y": 560,
        "wires": [
            [
                "3fe575d0c9bab06f"
            ]
        ]
    },
    {
        "id": "7b15ea9b66a02048",
        "type": "mqtt in",
        "z": "bcccda1a284b21ed",
        "name": "",
        "topic": "Matlab_to_IED8/iphase3",
        "qos": "2",
        "datatype": "auto",
        "broker": "28dd6d951f6889f1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 570,
        "y": 620,
        "wires": [
            [
                "41c4c068fe61847d"
            ]
        ]
    },
    {
        "id": "b4024c00dd8369b0",
        "type": "mqtt in",
        "z": "bcccda1a284b21ed",
        "name": "",
        "topic": "Matlab_to_IED8/freq",
        "qos": "2",
        "datatype": "auto",
        "broker": "a9109174f89c9db7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 550,
        "y": 680,
        "wires": [
            [
                "18cdfc949366df0e"
            ]
        ]
    },
    {
        "id": "cffa256dad1fd0d9",
        "type": "mqtt in",
        "z": "bcccda1a284b21ed",
        "name": "",
        "topic": "Matlab_to_IED8/voltage_N",
        "qos": "2",
        "datatype": "auto",
        "broker": "64d2a851e3b6ce54",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 570,
        "y": 740,
        "wires": [
            [
                "6acb6f59e6bec65e"
            ]
        ]
    },
    {
        "id": "c0aa29cb07689254",
        "type": "mqtt in",
        "z": "bcccda1a284b21ed",
        "name": "",
        "topic": "Matlab_to_IED8/current_N",
        "qos": "2",
        "datatype": "auto",
        "broker": "39ca2212f01664f2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 570,
        "y": 800,
        "wires": [
            [
                "d41b30a13ccb08c8"
            ]
        ]
    },
    {
        "id": "bbae90fd3f91ee2e",
        "type": "inject",
        "z": "c374fe5106ba07da",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 530,
        "y": 580,
        "wires": [
            [
                "ff8781434502e548"
            ]
        ]
    },
    {
        "id": "ff8781434502e548",
        "type": "function",
        "z": "c374fe5106ba07da",
        "name": "Combine Values into Array",
        "func": "var a = global.get('voltage1');\nvar b = global.get('voltage2');\nvar c = global.get('voltage3');\nvar d = global.get('f6_current1');\nvar e = global.get('f6_current2');\nvar f = global.get('f6_current3');\nvar g = global.get('Frequency');\nvar h = global.get('voltageN');\nvar i = global.get('currentN');\n\nconst modbus = [a, b, c, d, e, f, g, h, i];\n\nmsg.payload = modbus;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 580,
        "wires": [
            [
                "367c17b02c6167c0"
            ]
        ]
    }
]