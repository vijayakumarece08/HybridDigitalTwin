[
    {
        "id": "14743dd19451b346",
        "type": "tab",
        "label": "Matlab to Feeder 8",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e7100800cd71a6ac",
        "type": "tab",
        "label": "Feeder 8 IED CB Decision",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e2adb02dba7a3c70",
        "type": "tab",
        "label": "Feeder 8 IED Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4348da95deeecf4f",
        "type": "tab",
        "label": "Database F8 IED10 IN",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c70f7dc693087ccb",
        "type": "tab",
        "label": "Database F8 IED10 OUT",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9d2563c1bcabbd8b",
        "type": "tab",
        "label": "Feeder 8 IED to Scada",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5764f739bc0eb9cd",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "14d8de8b997f2ec1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.124",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "864d9060546a30a9",
        "type": "mqtt-broker",
        "name": "Heroku Cloud",
        "broker": "driver.cloudmqtt.com",
        "port": "18833",
        "tls": "",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "6000",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d74c5b12466e2cbe",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c9604772a71df5cc",
        "type": "ui_group",
        "name": "home",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "68603dac7703ae22",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "ff19e076d89e69d6",
        "type": "mqtt-broker",
        "name": "Testing MQTT broker",
        "broker": "172.20.10.14",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5ac8ee3676ea6c8f",
        "type": "mqtt-broker",
        "name": "thingspeak",
        "broker": "mqtt.thingspeak.com",
        "port": "1883",
        "clientid": "MSwRNSEaIQwaDD0rMBQxFxc",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "6000",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "65f559c97b3717db",
        "type": "mqtt-broker",
        "name": "",
        "broker": "tcp://driver.cloudmqtt.com:18833",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "40f0885a77cdf198",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.54",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "de4d0699ab8b1f3a",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.103",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "3b8e2cf84bc048b7",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "localhost",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "cc69b075c8fc3193",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.103",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "727bc504e3a73b9c",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.115",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "4a638c230da8e5ea",
        "type": "modbus-client",
        "name": "rasppi",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.104",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "8aa03d47313688e6",
        "type": "ui_group",
        "name": "MGC Control Panel",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4642b6a3511c7a23",
        "type": "ui_group",
        "name": "Values",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "0d7e9b0d0441e5b9",
        "type": "ui_group",
        "name": "Status",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ee15aef8ad6c3a00",
        "type": "ui_group",
        "name": "Values",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "aa40590b6ee1c7df",
        "type": "ui_group",
        "name": "Status",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5ec3af6babfa3b8c",
        "type": "ui_group",
        "name": "Values",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b2fa2287e232d64a",
        "type": "ui_group",
        "name": "Status",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "0ebc5278e638de52",
        "type": "ui_group",
        "name": "Control",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a3137d209e8a0be7",
        "type": "ui_group",
        "name": "Control",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "aa35425bbe09a6b3",
        "type": "ui_group",
        "name": "Event Recording",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": true
    },
    {
        "id": "1c991d89134bca61",
        "type": "ui_group",
        "name": "IED",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "47348ca1472592df",
        "type": "ui_group",
        "name": "HT-SP-Q01",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "14db5eded61ff006",
        "type": "ui_group",
        "name": "HT-SS1-Q01A",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "62df69bf4d9b9b3f",
        "type": "ui_group",
        "name": "HT-SS1-Q01B",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "9c55700fec07d1c8",
        "type": "ui_group",
        "name": "HT-SS1-Q02",
        "tab": "",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "592c307e9c7bea9b",
        "type": "ui_group",
        "name": "LT-MGB-Q01A",
        "tab": "",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "6dfe0a3abb8caa98",
        "type": "ui_group",
        "name": "LT-MGB-Q01B",
        "tab": "",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "6f8d0af9585ad33c",
        "type": "ui_group",
        "name": "LT-MGB-Q02",
        "tab": "",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "9f994eacb5272b18",
        "type": "ui_group",
        "name": "LT-MGB-Q03",
        "tab": "",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "1fbd47b8ed687dc5",
        "type": "ui_group",
        "name": "LT-MGB-Q04",
        "tab": "",
        "order": 11,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "e37747c4a6a33d77",
        "type": "ui_group",
        "name": "WDB1-Q01A",
        "tab": "",
        "order": 12,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "704ed513dee4237f",
        "type": "ui_group",
        "name": "WDB1-Q01B",
        "tab": "",
        "order": 13,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "f552044a7b15afb9",
        "type": "ui_group",
        "name": "HT-SP-Q01",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "98f8ccd9c419ea62",
        "type": "ui_group",
        "name": "HT-SS1-Q01A",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "580473319acfd523",
        "type": "ui_group",
        "name": "HT-SS1-Q01B",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "92911bd239a2df22",
        "type": "ui_group",
        "name": "LT-MGB-Q01A",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "8d436349e25d3c9f",
        "type": "ui_group",
        "name": "LT-MGB-Q01B",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "dde0968934145ce7",
        "type": "ui_group",
        "name": "LT-MGB-Q02",
        "tab": "",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "e0fe795387d2dfdf",
        "type": "ui_group",
        "name": "LT-MGB-Q04",
        "tab": "",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "28a16a08229c5a77",
        "type": "ui_group",
        "name": "DI1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f4245d952cf8e4f0",
        "type": "ui_group",
        "name": "DI 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "217d14f5419ed0ba",
        "type": "ui_group",
        "name": " ",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "19",
        "collapse": false
    },
    {
        "id": "45896da602881606",
        "type": "ui_group",
        "name": "",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "9047fc7e68350574",
        "type": "ui_group",
        "name": "",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ae3b87d31b01130c",
        "type": "ui_group",
        "name": "SLD",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 26,
        "collapse": false
    },
    {
        "id": "2d59592878ed88d1",
        "type": "ui_group",
        "name": "Graphics",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "0f5ffb7bc5763192",
        "type": "ui_group",
        "name": "Controls",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b2a9ee4c9e12f60a",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "f89b6da322ada41f",
        "type": "ui_group",
        "name": "SLD",
        "tab": "307bf661.b180da",
        "order": 1,
        "disp": false,
        "width": 19,
        "collapse": false
    },
    {
        "id": "4fb3ac05686e180c",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "307bf661.b180da",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "c964117c09391f7c",
        "type": "mqtt-broker",
        "name": "",
        "broker": "ec2-13-251-128-198.ap-southeast-1.compute.amazonaws.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "6156c03930c3cce8",
        "type": "ui_group",
        "name": "Group 5",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": 6
    },
    {
        "id": "2400dc5162fb8724",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "a844158acf8e67d1",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": 6
    },
    {
        "id": "98640ccf497ee560",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.106",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "10b8698a2525ed68",
        "type": "mqtt-broker",
        "name": "",
        "broker": "tcp://driver.cloudmqtt.com:18833",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "97d542826667f2bb",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.103",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "b1b9702153093215",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "6011f7f622af19d4",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.54",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "1fa6dd1a4e12c2a9",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.104",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "bb28af46b1f91399",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.122",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "a9a07595e0076d6f",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": true
    },
    {
        "id": "b7fcb97b973caf6c",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.106",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "22746769193b68c7",
        "type": "ui_group",
        "name": "IED 10",
        "tab": "700de60eb6b96f66",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "72c4ac73b1798320",
        "type": "ui_group",
        "name": "Event Recording",
        "tab": "700de60eb6b96f66",
        "order": 1,
        "disp": true,
        "width": 14,
        "collapse": true
    },
    {
        "id": "700de60eb6b96f66",
        "type": "ui_tab",
        "name": "Meters",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a41c14ed603062c7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.00.115",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "570b6601b0ac04dd",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.117",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a8783a36b8a54a63",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.118",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "aa310c6d378864d9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.116",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5726206e0232771e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.119",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "fa6d9bf89868a133",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.120",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b0e86082e6c0d4c8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.121",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8b12bd793e50e0b0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.122",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5d14470d7c7d3709",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.123",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "bd55cf29aa8ad217",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.114",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "2757e26062a5c981",
        "type": "modbus-client",
        "name": "PyModbus",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.200",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "f6aaf33633b83f85",
        "type": "ui_group",
        "name": "Database F8 IED10 IN",
        "tab": "9dd9caa4d7cf0608",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "071915ed3352cb3f",
        "type": "sqlitedb",
        "db": "/tmp/pi_f8_ied10",
        "mode": "RWC"
    },
    {
        "id": "3874591d96c90485",
        "type": "ui_group",
        "name": "Sensors",
        "tab": "eb7e21f6153b6b0e",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "1d6ad3ac8d36207f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.123",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "32b247a6ff6d4541",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.122",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "da462fd23f764a4f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.121",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "daf18a1e15b4d6ec",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.120",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ea7a4f8ebe73aabb",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.119",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "59d688cd839cce01",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.116",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "81f325881e4668de",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.118",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "9033982f585ebcd0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.117",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "0a76e8a062923e80",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.115",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b1702c3f02043887",
        "type": "ui_group",
        "name": "Read Result",
        "tab": "c4266abcbc4fc53f",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b4880c0d73b7b57b",
        "type": "sqlitedb",
        "db": "/tmp/sqlite2",
        "mode": "RWC"
    },
    {
        "id": "8788b39e879497ec",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.114",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "9dd9caa4d7cf0608",
        "type": "ui_tab",
        "name": "Database F8 IED10 IN",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "eb7e21f6153b6b0e",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 5,
        "disabled": true,
        "hidden": true
    },
    {
        "id": "c4266abcbc4fc53f",
        "type": "ui_tab",
        "name": "Database F8 IED10 OUT",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c92996cc0679e412",
        "type": "modbus-client",
        "name": "PyModbus Server",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.200",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "0a5c226c21366f3e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.123",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "eaeeed525b5f6be0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.122",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "302433deb48d34f9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.121",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "952c92d71d8891f0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.120",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "17ed16de8cc6bfe9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.119",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "41de27cc23aa494f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.116",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a1efd3b66b2037a0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.118",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "48350bfcf954eb1a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.117",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "928012c9667198db",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.114",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7df85764da633255",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.114",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a78642f3c7523d56",
        "type": "modbus-client",
        "name": "PyModbus",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.0.104",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "9fa04bf3b72bc2e7",
        "type": "ui_group",
        "name": "IED 10 CB Manual Control",
        "tab": "700de60eb6b96f66",
        "order": 3,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f26433a1fa586253",
        "type": "modbus-client",
        "name": "PyModbus Server",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "192.168.1.200",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "a8cf692cc3033ec1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.115",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c780804574035f33",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.124",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b75c2e5d44c8c685",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.123",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "6f3d438ec2dfc7bb",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.122",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "3abdb6fbc2437e51",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.113",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c1a3a17b7fb52573",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.120",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "28dd6d951f6889f1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.119",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a9109174f89c9db7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.116",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "64d2a851e3b6ce54",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.118",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "39ca2212f01664f2",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.117",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "930e73bc955e6dc9",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "global.set('voltage1', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "6a74edd888fc38e2",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "var obtainV = global.get(\"voltage1\");\nmsg.payload = obtainV;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 180,
        "wires": [
            [
                "f2bc72c566d911e3"
            ]
        ]
    },
    {
        "id": "f2bc72c566d911e3",
        "type": "debug",
        "z": "14743dd19451b346",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 180,
        "wires": []
    },
    {
        "id": "0a270d3591c172b5",
        "type": "inject",
        "z": "14743dd19451b346",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 180,
        "wires": [
            [
                "6a74edd888fc38e2"
            ]
        ]
    },
    {
        "id": "5b1beb20e20c9a76",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "global.set('voltage2', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "68639bc72f2b0a33",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "var obtainV2 = global.get(\"voltage2\");\nmsg.payload = obtainV2;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "2d8a053fb74e9bc5"
            ]
        ]
    },
    {
        "id": "2d8a053fb74e9bc5",
        "type": "debug",
        "z": "14743dd19451b346",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 240,
        "wires": []
    },
    {
        "id": "6b06bcc7194eea84",
        "type": "inject",
        "z": "14743dd19451b346",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 240,
        "wires": [
            [
                "68639bc72f2b0a33"
            ]
        ]
    },
    {
        "id": "dc633a5fb4a2227b",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "global.set('voltage3', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "7efda4e1e4eaa635",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "var obtainV3 = global.get(\"voltage3\");\nmsg.payload = obtainV3;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 300,
        "wires": [
            [
                "8f9122f158df0b8f"
            ]
        ]
    },
    {
        "id": "8f9122f158df0b8f",
        "type": "debug",
        "z": "14743dd19451b346",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 300,
        "wires": []
    },
    {
        "id": "ed88054d0d82ec48",
        "type": "inject",
        "z": "14743dd19451b346",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 300,
        "wires": [
            [
                "7efda4e1e4eaa635"
            ]
        ]
    },
    {
        "id": "715a117f11a061bb",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "global.set('current1', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "59f8f7c80d178137",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "var obtainI = global.get(\"current1\");\nmsg.payload = obtainI;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 360,
        "wires": [
            [
                "c6c708696a0fd5d7"
            ]
        ]
    },
    {
        "id": "c6c708696a0fd5d7",
        "type": "debug",
        "z": "14743dd19451b346",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 360,
        "wires": []
    },
    {
        "id": "1dcc59ecf1cd0879",
        "type": "inject",
        "z": "14743dd19451b346",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 360,
        "wires": [
            [
                "59f8f7c80d178137"
            ]
        ]
    },
    {
        "id": "6f8d7eace2520d4e",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "global.set('current2', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "b6c36aa46a6bf1dc",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "var obtainI2 = global.get(\"current2\");\nmsg.payload = obtainI2;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 420,
        "wires": [
            [
                "af4dd9e98b19348a"
            ]
        ]
    },
    {
        "id": "af4dd9e98b19348a",
        "type": "debug",
        "z": "14743dd19451b346",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 420,
        "wires": []
    },
    {
        "id": "c2ed4be2876ba848",
        "type": "inject",
        "z": "14743dd19451b346",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 420,
        "wires": [
            [
                "b6c36aa46a6bf1dc"
            ]
        ]
    },
    {
        "id": "cbfded6f74547d2a",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "global.set('current3', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "f535f4894e0e7da8",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "var obtainI3 = global.get(\"current3\");\nmsg.payload = obtainI3;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 480,
        "wires": [
            [
                "3d0b77ab02aeb182"
            ]
        ]
    },
    {
        "id": "3d0b77ab02aeb182",
        "type": "debug",
        "z": "14743dd19451b346",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 480,
        "wires": []
    },
    {
        "id": "0daade12c30d8b07",
        "type": "inject",
        "z": "14743dd19451b346",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 480,
        "wires": [
            [
                "f535f4894e0e7da8"
            ]
        ]
    },
    {
        "id": "f9a24e02dbc327ab",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "global.set('Frequency', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "f3d303ec6d1c2a1f",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "var obtainF = global.get(\"Frequency\");\nmsg.payload = obtainF;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 540,
        "wires": [
            [
                "60aa04213aa7cb18"
            ]
        ]
    },
    {
        "id": "60aa04213aa7cb18",
        "type": "debug",
        "z": "14743dd19451b346",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 540,
        "wires": []
    },
    {
        "id": "18b4346f6f784cd4",
        "type": "inject",
        "z": "14743dd19451b346",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 540,
        "wires": [
            [
                "f3d303ec6d1c2a1f"
            ]
        ]
    },
    {
        "id": "ab01880af4f6a31a",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "global.set('voltageN', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "d2391d461efc40e3",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "var obtainVn = global.get(\"voltageN\");\nmsg.payload = obtainVn;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 600,
        "wires": [
            [
                "d745383ac5493176"
            ]
        ]
    },
    {
        "id": "d745383ac5493176",
        "type": "debug",
        "z": "14743dd19451b346",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 600,
        "wires": []
    },
    {
        "id": "96cfac59cda53101",
        "type": "inject",
        "z": "14743dd19451b346",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 600,
        "wires": [
            [
                "d2391d461efc40e3"
            ]
        ]
    },
    {
        "id": "eb3e36711ccac7b7",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "global.set('currentN', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "8af23f9d1de5350a",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "var obtainIn = global.get(\"currentN\");\nmsg.payload = obtainIn;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 660,
        "wires": [
            [
                "7ebad49b9f7c58ee"
            ]
        ]
    },
    {
        "id": "7ebad49b9f7c58ee",
        "type": "debug",
        "z": "14743dd19451b346",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 660,
        "wires": []
    },
    {
        "id": "d2d1e794cb80ec27",
        "type": "inject",
        "z": "14743dd19451b346",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 660,
        "wires": [
            [
                "8af23f9d1de5350a"
            ]
        ]
    },
    {
        "id": "7d7056248cfbd4ac",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "global.set('f8_load', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "2c5c3bf7876d644e",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "",
        "func": "var obtain_load = global.get(\"f8_load\");\nmsg.payload = obtain_load;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 720,
        "wires": [
            [
                "77cce7451d41b490"
            ]
        ]
    },
    {
        "id": "77cce7451d41b490",
        "type": "debug",
        "z": "14743dd19451b346",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 720,
        "wires": []
    },
    {
        "id": "d55df0e4e8e6c62b",
        "type": "inject",
        "z": "14743dd19451b346",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1210,
        "y": 720,
        "wires": [
            [
                "2c5c3bf7876d644e"
            ]
        ]
    },
    {
        "id": "5da9457ab8cccb02",
        "type": "inject",
        "z": "14743dd19451b346",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 730,
        "y": 780,
        "wires": [
            [
                "b5be2b20dbb725e2"
            ]
        ]
    },
    {
        "id": "b5be2b20dbb725e2",
        "type": "function",
        "z": "14743dd19451b346",
        "name": "Calculating Load",
        "func": "var obtainI = global.get(\"current1\");\nvar obtainI2 = global.get(\"current2\");\nvar obtainI3 = global.get(\"current3\");\nvar obtainL = global.get(\"f8_load\");\n\nvar f8_current1 = obtainI*(obtainL/45);\nvar f8_current2 = obtainI2*(obtainL/45);\nvar f8_current3 = obtainI3*(obtainL/45);\n\nglobal.set('f8_current1', String(f8_current1))\nglobal.set('f8_current2', String(f8_current2))\nglobal.set('f8_current3', String(f8_current3))\n\nmsg.payload = f8_current2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 780,
        "wires": [
            [
                "08c2f97cbe44d2f9"
            ]
        ]
    },
    {
        "id": "08c2f97cbe44d2f9",
        "type": "debug",
        "z": "14743dd19451b346",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 780,
        "wires": []
    },
    {
        "id": "996254e173f7ea64",
        "type": "mqtt in",
        "z": "14743dd19451b346",
        "name": "",
        "topic": "Matlab_to_IED10/load",
        "qos": "2",
        "datatype": "auto",
        "broker": "a8cf692cc3033ec1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 760,
        "y": 720,
        "wires": [
            [
                "7d7056248cfbd4ac"
            ]
        ]
    },
    {
        "id": "54944b0ee514203a",
        "type": "mqtt in",
        "z": "14743dd19451b346",
        "name": "",
        "topic": "Matlab_to_IED10/vphase1",
        "qos": "2",
        "datatype": "auto",
        "broker": "c780804574035f33",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 180,
        "wires": [
            [
                "930e73bc955e6dc9"
            ]
        ]
    },
    {
        "id": "01f47eb02e3d154a",
        "type": "mqtt in",
        "z": "14743dd19451b346",
        "name": "",
        "topic": "Matlab_to_IED10/vphase2",
        "qos": "2",
        "datatype": "auto",
        "broker": "b75c2e5d44c8c685",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 240,
        "wires": [
            [
                "5b1beb20e20c9a76"
            ]
        ]
    },
    {
        "id": "30821bbb638ca139",
        "type": "mqtt in",
        "z": "14743dd19451b346",
        "name": "",
        "topic": "Matlab_to_IED10/vphase3",
        "qos": "2",
        "datatype": "auto",
        "broker": "6f3d438ec2dfc7bb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 300,
        "wires": [
            [
                "dc633a5fb4a2227b"
            ]
        ]
    },
    {
        "id": "06b22b27daf6c883",
        "type": "mqtt in",
        "z": "14743dd19451b346",
        "name": "",
        "topic": "Matlab_to_IED10/iphase1",
        "qos": "2",
        "datatype": "auto",
        "broker": "3abdb6fbc2437e51",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 360,
        "wires": [
            [
                "715a117f11a061bb"
            ]
        ]
    },
    {
        "id": "c13951f1260875dc",
        "type": "mqtt in",
        "z": "14743dd19451b346",
        "name": "",
        "topic": "Matlab_to_IED10/iphase2",
        "qos": "2",
        "datatype": "auto",
        "broker": "c1a3a17b7fb52573",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 420,
        "wires": [
            [
                "6f8d7eace2520d4e"
            ]
        ]
    },
    {
        "id": "6fdc6cc4261fa07c",
        "type": "mqtt in",
        "z": "14743dd19451b346",
        "name": "",
        "topic": "Matlab_to_IED10/iphase3",
        "qos": "2",
        "datatype": "auto",
        "broker": "28dd6d951f6889f1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 480,
        "wires": [
            [
                "cbfded6f74547d2a"
            ]
        ]
    },
    {
        "id": "491cc7a0a93f0eaa",
        "type": "mqtt in",
        "z": "14743dd19451b346",
        "name": "",
        "topic": "Matlab_to_IED10/freq",
        "qos": "2",
        "datatype": "auto",
        "broker": "a9109174f89c9db7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 760,
        "y": 540,
        "wires": [
            [
                "f9a24e02dbc327ab"
            ]
        ]
    },
    {
        "id": "28f89b3e87454d15",
        "type": "mqtt in",
        "z": "14743dd19451b346",
        "name": "",
        "topic": "Matlab_to_IED10/voltage_N",
        "qos": "2",
        "datatype": "auto",
        "broker": "64d2a851e3b6ce54",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 780,
        "y": 600,
        "wires": [
            [
                "ab01880af4f6a31a"
            ]
        ]
    },
    {
        "id": "a026f7a11bb818c0",
        "type": "mqtt in",
        "z": "14743dd19451b346",
        "name": "",
        "topic": "Matlab_to_IED10/current_N",
        "qos": "2",
        "datatype": "auto",
        "broker": "39ca2212f01664f2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 780,
        "y": 660,
        "wires": [
            [
                "eb3e36711ccac7b7"
            ]
        ]
    },
    {
        "id": "f20a1e342e6eaf6b",
        "type": "mqtt out",
        "z": "e7100800cd71a6ac",
        "name": "MQTT CB10 Channel",
        "topic": "IED10_to_CB/CB10_status",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bd55cf29aa8ad217",
        "x": 660,
        "y": 360,
        "wires": []
    },
    {
        "id": "482dd44e50b7772b",
        "type": "debug",
        "z": "e7100800cd71a6ac",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 320,
        "wires": []
    },
    {
        "id": "25924b6f031f534c",
        "type": "function",
        "z": "e7100800cd71a6ac",
        "name": "CB Decision",
        "func": "var obtainV = global.get('voltage1');\nvar obtainV2 = global.get(\"voltage2\");\nvar obtainV3 = global.get(\"voltage3\");\nvar obtainI = global.get(\"f8_current1\");\nvar obtainI2 = global.get(\"f8_current2\");\nvar obtainI3 = global.get(\"f8_current3\");\nvar obtainF = global.get(\"Frequency\");\nvar obtainVn = global.get(\"voltageN\");\nvar obtainIn = global.get(\"currentN\");\nvar cb_decision;\nvar ov_status;\nvar oc_status;\nvar switch_status= global.get(\"switch10\");\nvar scadaswitch_status= global.get(\"scadaswitch10\");\n\n\n\nif (obtainV > 250 || obtainV2 > 250 || obtainV3 > 250)\n{\n    ov_status = 1;\n} else \n{\n    ov_status = 0;\n}\n\nif (obtainI > 5 || obtainI2 > 5 || obtainI3 > 5)\n{\n    oc_status = 1;\n} else \n{\n    oc_status = 0;\n}\n\n\nif  (ov_status == 1 && oc_status == 1 && obtainF > 53)\n {\n    cb_decision = 'Open';\n }\n    else if(ov_status == 1 && oc_status == 1)\n {\n    cb_decision = 'Open';\n } \n    else if(oc_status == 1 && obtainF > 53)\n {\n    cb_decision = 'Open';\n } \n    else if(ov_status == 1 && obtainF > 53)\n {\n    cb_decision = 'Open';\n } \n    else if(oc_status == 1 && obtainF > 53)\n {\n    cb_decision = 'Open';\n } \n    else if (ov_status == 1)\n {\n    cb_decision = 'Open';\n }\n    else if (obtainF > 55)\n {\n    cb_decision = 'Open';\n }\n    else if  (oc_status == 1)\n {\n    cb_decision = 'Open';\n }\n   else if (scadaswitch_status== \"1\" || switch_status== \"1\") \n{\n    cb_decision = 'Open';       \n}\n    else {\n    cb_decision = 'Closed';\n }\n\nvar a = global.get('event');\nvar b = global.get('cb_status');\nvar c = \"Event: \" + a + \" | CB Status: \" + cb_decision;\nmsg.payload = c;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 360,
        "wires": [
            [
                "f20a1e342e6eaf6b",
                "482dd44e50b7772b"
            ]
        ]
    },
    {
        "id": "006020af9502ac30",
        "type": "function",
        "z": "e7100800cd71a6ac",
        "name": "",
        "func": "msg.payload = { \n    value: msg.payload, \n    'fc': 6, \n    'unitid': 2, \n    'address': 27 , \n    'quantity': 1 \n    \n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 280,
        "wires": [
            [
                "666a6230f5f40462",
                "51fa3b6ccd3d984e"
            ]
        ]
    },
    {
        "id": "5f03c8fa343d16b1",
        "type": "debug",
        "z": "e7100800cd71a6ac",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 280,
        "wires": []
    },
    {
        "id": "666a6230f5f40462",
        "type": "modbus-flex-write",
        "z": "e7100800cd71a6ac",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "2757e26062a5c981",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 870,
        "y": 280,
        "wires": [
            [
                "5f03c8fa343d16b1"
            ],
            []
        ]
    },
    {
        "id": "f114d06ec8998ac8",
        "type": "function",
        "z": "e7100800cd71a6ac",
        "name": "Calculate Total Power",
        "func": "var obtainV = global.get('voltage1');\nvar obtainV2 = global.get(\"voltage2\");\nvar obtainV3 = global.get(\"voltage3\");\nvar obtainI = global.get(\"f8_current1\");\nvar obtainI2 = global.get(\"f8_current2\");\nvar obtainI3 = global.get(\"f8_current3\");\nvar power1;\nvar power2;\nvar power3;\nvar total_power;\n\npower1 = obtainV*obtainI;\npower2 = obtainV2*obtainI2;\npower3 = obtainV3*obtainI3;\ntotal_power = power1 + power2 + power3;\n\nmsg.payload = total_power;\nglobal.set('total_power', total_power)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 280,
        "wires": [
            [
                "006020af9502ac30"
            ]
        ]
    },
    {
        "id": "51fa3b6ccd3d984e",
        "type": "debug",
        "z": "e7100800cd71a6ac",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 240,
        "wires": []
    },
    {
        "id": "c4ffc29f181cb58c",
        "type": "inject",
        "z": "e7100800cd71a6ac",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 280,
        "wires": [
            [
                "f114d06ec8998ac8",
                "25924b6f031f534c"
            ]
        ]
    },
    {
        "id": "4ad5ced7ba88ef62",
        "type": "comment",
        "z": "e7100800cd71a6ac",
        "name": "SCADA Dashboard 's switch",
        "info": "",
        "x": 280,
        "y": 520,
        "wires": []
    },
    {
        "id": "51cbb4379cd1def9",
        "type": "comment",
        "z": "e7100800cd71a6ac",
        "name": "IED's dashboard switch",
        "info": "",
        "x": 240,
        "y": 420,
        "wires": []
    },
    {
        "id": "0f3200836482e17e",
        "type": "ui_switch",
        "z": "e7100800cd71a6ac",
        "name": "switch_status",
        "label": "IED10 Circuit breaker 10 switch",
        "tooltip": "",
        "group": "9fa04bf3b72bc2e7",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "payload",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 280,
        "y": 460,
        "wires": [
            [
                "b6ae769561513d5e"
            ]
        ]
    },
    {
        "id": "b6ae769561513d5e",
        "type": "function",
        "z": "e7100800cd71a6ac",
        "name": "",
        "func": "global.set('switch10', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "8d2a2733a2c57251",
        "type": "function",
        "z": "e7100800cd71a6ac",
        "name": "",
        "func": "var switch_status = global.get(\"switch10\");\nmsg.payload = switch_status;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 460,
        "wires": [
            [
                "ac171a0ad0b7b517"
            ]
        ]
    },
    {
        "id": "ac171a0ad0b7b517",
        "type": "debug",
        "z": "e7100800cd71a6ac",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 460,
        "wires": []
    },
    {
        "id": "30c128ea17ae68a5",
        "type": "inject",
        "z": "e7100800cd71a6ac",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 650,
        "y": 460,
        "wires": [
            [
                "8d2a2733a2c57251"
            ]
        ]
    },
    {
        "id": "1f41b218244c69bb",
        "type": "modbus-read",
        "z": "e7100800cd71a6ac",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "560",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f26433a1fa586253",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 270,
        "y": 580,
        "wires": [
            [
                "8995570d334a8be5"
            ],
            []
        ]
    },
    {
        "id": "8995570d334a8be5",
        "type": "function",
        "z": "e7100800cd71a6ac",
        "name": "",
        "func": "global.set('scadaswitch10', msg.payload)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "702de70211d47aed",
        "type": "function",
        "z": "e7100800cd71a6ac",
        "name": "",
        "func": "var scadaswitch_status = global.get(\"scadaswitch10\");\nmsg.payload = scadaswitch_status;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 580,
        "wires": [
            [
                "e884a86ed5dd2b89"
            ]
        ]
    },
    {
        "id": "e884a86ed5dd2b89",
        "type": "debug",
        "z": "e7100800cd71a6ac",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 580,
        "wires": []
    },
    {
        "id": "c3980dc405e70b2b",
        "type": "inject",
        "z": "e7100800cd71a6ac",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 670,
        "y": 580,
        "wires": [
            [
                "702de70211d47aed"
            ]
        ]
    },
    {
        "id": "ca41de9e171385df",
        "type": "function",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;\n\n//if(msg.payload > '220')\n //{\n//      msg.payload = 'value exceeded';\n// } \n// else {\n //    msg.payload = msg.payload;\n// }\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 320,
        "wires": [
            [
                "5699c0b4801ffee5"
            ]
        ]
    },
    {
        "id": "4f67ba8e1860ff37",
        "type": "function",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 380,
        "wires": [
            [
                "86d4a2e529e6066c"
            ]
        ]
    },
    {
        "id": "9afc7e0e1a1c3fb2",
        "type": "function",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 440,
        "wires": [
            [
                "caea22a4dbbd055e"
            ]
        ]
    },
    {
        "id": "e23d81fb04bc71a6",
        "type": "function",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "func": "var d = global.get('f8_current1');\nmsg.payload = parseFloat(d).toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 500,
        "wires": [
            [
                "902660e7e139a4da"
            ]
        ]
    },
    {
        "id": "fd15345a1a9616bb",
        "type": "function",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "func": "var d = global.get('f8_current2');\nmsg.payload = parseFloat(d).toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 560,
        "wires": [
            [
                "6b3f23d29198d9b9"
            ]
        ]
    },
    {
        "id": "c5a528ef4baccdeb",
        "type": "function",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "func": "var d = global.get('f8_current3');\nmsg.payload = parseFloat(d).toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 620,
        "wires": [
            [
                "662312b50b4f5de0"
            ]
        ]
    },
    {
        "id": "6f68b88c366e8905",
        "type": "function",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 680,
        "wires": [
            [
                "408cfb097abde19e"
            ]
        ]
    },
    {
        "id": "2c13797c1aaa0735",
        "type": "function",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 740,
        "wires": [
            [
                "f0f59b254c4adff1"
            ]
        ]
    },
    {
        "id": "0e161631b481c70f",
        "type": "function",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "func": "var d = msg.payload;\nmsg.payload = parseFloat(d);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 800,
        "wires": [
            [
                "54d46e1944c08202"
            ]
        ]
    },
    {
        "id": "5699c0b4801ffee5",
        "type": "ui_text",
        "z": "e2adb02dba7a3c70",
        "group": "22746769193b68c7",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase A Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "x": 1100,
        "y": 320,
        "wires": []
    },
    {
        "id": "86d4a2e529e6066c",
        "type": "ui_text",
        "z": "e2adb02dba7a3c70",
        "group": "22746769193b68c7",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase B Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "x": 1110,
        "y": 380,
        "wires": []
    },
    {
        "id": "caea22a4dbbd055e",
        "type": "ui_text",
        "z": "e2adb02dba7a3c70",
        "group": "22746769193b68c7",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase C Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "x": 1110,
        "y": 440,
        "wires": []
    },
    {
        "id": "902660e7e139a4da",
        "type": "ui_text",
        "z": "e2adb02dba7a3c70",
        "group": "22746769193b68c7",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase A Current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1100,
        "y": 500,
        "wires": []
    },
    {
        "id": "6b3f23d29198d9b9",
        "type": "ui_text",
        "z": "e2adb02dba7a3c70",
        "group": "22746769193b68c7",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase B Current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1110,
        "y": 560,
        "wires": []
    },
    {
        "id": "662312b50b4f5de0",
        "type": "ui_text",
        "z": "e2adb02dba7a3c70",
        "group": "22746769193b68c7",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phase C current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1100,
        "y": 620,
        "wires": []
    },
    {
        "id": "408cfb097abde19e",
        "type": "ui_text",
        "z": "e2adb02dba7a3c70",
        "group": "22746769193b68c7",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Frequency",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "x": 1090,
        "y": 680,
        "wires": []
    },
    {
        "id": "f0f59b254c4adff1",
        "type": "ui_text",
        "z": "e2adb02dba7a3c70",
        "group": "22746769193b68c7",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Neutral Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "x": 1100,
        "y": 740,
        "wires": []
    },
    {
        "id": "54d46e1944c08202",
        "type": "ui_text",
        "z": "e2adb02dba7a3c70",
        "group": "22746769193b68c7",
        "order": 17,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Neutral Current",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1100,
        "y": 800,
        "wires": []
    },
    {
        "id": "391c24d9c932b32e",
        "type": "function",
        "z": "e2adb02dba7a3c70",
        "name": "IED Functionality",
        "func": "\nvar obtainV = global.get('voltage1');\nvar obtainV2 = global.get(\"voltage2\");\nvar obtainV3 = global.get(\"voltage3\");\n//var obtainI = global.get(\"current1\");\n//var obtainI2 = global.get(\"current2\");\n//var obtainI3 = global.get(\"current3\");\nvar obtainF = global.get(\"Frequency\");\nvar obtainVn = global.get(\"voltageN\");\nvar obtainIn = global.get(\"currentN\");\nvar cb_status;\nvar event;\nvar ov_status;\nvar oc_status;\nvar phasefaultV;\nvar phasefaultI;\nvar obtainI = global.get('f8_current1');\nvar obtainI2 = global.get('f8_current2');\nvar obtainI3 = global.get('f8_current3');\nvar switch_status= global.get(\"switch10\");\nvar scadaswitch_status= global.get(\"scadaswitch10\");\n\nif (obtainV > 250 || obtainV2 > 250 || obtainV3 > 250)\n{\n    ov_status = 1;\n   \n} else \n{\n    ov_status = 0;\n}\n\nif (obtainI > 5 || obtainI2 > 5 || obtainI3 > 5)\n{\n    oc_status = 1;\n    \n} else \n{\n    oc_status = 0;\n}\n\nif  (ov_status == 1 && oc_status == 1 && obtainF > 53)\n {\n    cb_status = 'Open';\n    event  = 'OC, OV & OF ';\n }\n    else if(ov_status == 1 && oc_status == 1)\n {\n    cb_status = 'Open';\n    event  = 'OV & OC';\n } \n    else if(oc_status == 1 && obtainF > 53)\n {\n    cb_status = 'Open';\n    event  = 'OC & OF';\n } \n    else if(ov_status == 1 && obtainF > 53)\n {\n    cb_status = 'Open';\n    event  = 'OV & OF';\n } \n    else if(oc_status == 1 && obtainF > 53)\n {\n    cb_status = 'Open';\n    event  = 'OC & OF';\n } \n    else if (ov_status == 1)\n {\n    cb_status = 'Open';\n    event  = 'Overvoltage';\n }\n    else if (obtainF > 55)\n {\n    cb_status = 'Open';\n    event  = 'Over Frequency';\n }\n    else if  (oc_status == 1)\n {\n     cb_status = 'Open';\n     event  = 'Overcurrent';\n }\n    else if (scadaswitch_status== \"1\" || switch_status== \"1\") \n{\n    cb_decision = 'Open';     \n    event  = 'Manual Open';\n}\n    else {\n    cb_status= 'Closed';\n    event = 'Clear';\n }\n  global.set('F8CBEvent', event)\n \n// phase event voltage\nif (obtainV > 250 && obtainV2 > 250 && obtainV3 > 250)\n {\n     phasefaultV= \" Phase A,B,C \";\n }\nelse if (obtainV > 250 && obtainV2 <= 250 && obtainV3 <= 250)\n{\n    phasefaultV= \" Phase A  \";\n    \n} else if(obtainV > 250 && obtainV2 > 250 && obtainV3 <= 250)\n{\n  phasefaultV= \" Phase A,B  \";\n}\nelse if(obtainV <= 250 && obtainV2 > 250 && obtainV3 > 250)\n{\n  phasefaultV= \" Phase B,C  \";\n}\nelse if(obtainV > 250 && obtainV2 <= 250 && obtainV3 > 250)\n{\n  phasefaultV= \" Phase A,C  \";\n}\nelse if(obtainV <= 250 && obtainV2 > 250 && obtainV3 <= 250)\n{\n  phasefaultV= \" Phase B  \";\n}\nelse if(obtainV <= 250 && obtainV2 <= 250 && obtainV3 > 250)\n{\n  phasefaultV= \" Phase C  \";\n}\nelse \n{\n  phasefaultV= \" Clear \";\n}\n\n// phase fault current \n\nif (obtainI > 5 && obtainI2 > 5 && obtainI3 > 5)\n {\n     phasefaultI= \" Phase A,B,C \";\n }\nelse if (obtainI > 5 && obtainI2 <= 5 && obtainI3 <= 5)\n{\n    phasefaultI= \" Phase A  \";\n    \n} else if(obtainI > 5 && obtainVI > 5 && obtainI3 <= 5)\n{\n  phasefaultI= \" Phase A,B  \";\n}\nelse if(obtainI <= 5 && obtainI2 > 5 && obtainI3 > 5)\n{\n  phasefaultI= \" Phase B,C  \";\n}\nelse if(obtainI > 5 && obtainI2 <= 5 && obtainI3 > 5)\n{\n  phasefaultI= \" Phase C,A \";\n}\nelse if(obtainI <= 5 && obtainI2 > 5 && obtainI3 <= 5)\n{\n  phasefaultI= \" Phase B  \";\n}\nelse if(obtainI <= 5 && obtainI2 <= 5 && obtainI3 > 5)\n{\n  phasefaultI= \" Phase C \";\n}\nelse \n{\n  phasefaultI= \" Clear \";\n}\n \nglobal.set('event', event)\n\n\ntableData = flow.get(\"savedData\") || [] ;\n\ntableData.unshift({\n    \"Timestamp\":new Date(msg.payload).toLocaleString(),\n    \"CB Status\": cb_status,\n    \"Event\": event ,\n    \"phasefaultV\": phasefaultV ,\n    \"phasefaultI\": phasefaultI ,\n    }\n); \n\nif(tableData.length >8) tableData.pop ();\n    \nmsg.payload = tableData;\n\nflow.set(\"savedData\", tableData);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 737,
        "y": 941,
        "wires": [
            [
                "dfca733a3f5a45db"
            ]
        ]
    },
    {
        "id": "832497f1eaf79b46",
        "type": "inject",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 477,
        "y": 941,
        "wires": [
            [
                "391c24d9c932b32e"
            ]
        ]
    },
    {
        "id": "a6c6267087d6a496",
        "type": "inject",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 457,
        "y": 901,
        "wires": [
            [
                "bebdeb9466847804"
            ]
        ]
    },
    {
        "id": "bebdeb9466847804",
        "type": "change",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "savedData",
                "pt": "flow",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 737,
        "y": 901,
        "wires": [
            []
        ]
    },
    {
        "id": "dfca733a3f5a45db",
        "type": "ui_table",
        "z": "e2adb02dba7a3c70",
        "group": "72c4ac73b1798320",
        "name": "",
        "order": 1,
        "width": "12",
        "height": "5",
        "columns": [
            {
                "field": "Timestamp",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "CB Status",
                "title": "CB state",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Event",
                "title": "Fault Event",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "phasefaultV",
                "title": "phase fault voltage",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "phasefaultI",
                "title": "phase fault current",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 950,
        "y": 940,
        "wires": []
    },
    {
        "id": "6e4190517440fae8",
        "type": "mqtt in",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "topic": "Matlab_to_IED10/vphase1",
        "qos": "2",
        "datatype": "auto",
        "broker": "c780804574035f33",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 610,
        "y": 320,
        "wires": [
            [
                "ca41de9e171385df"
            ]
        ]
    },
    {
        "id": "dad6f2f5bc348b54",
        "type": "mqtt in",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "topic": "Matlab_to_IED10/vphase2",
        "qos": "2",
        "datatype": "auto",
        "broker": "b75c2e5d44c8c685",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 610,
        "y": 380,
        "wires": [
            [
                "4f67ba8e1860ff37"
            ]
        ]
    },
    {
        "id": "78b655efb828c569",
        "type": "mqtt in",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "topic": "Matlab_to_IED10/vphase3",
        "qos": "2",
        "datatype": "auto",
        "broker": "6f3d438ec2dfc7bb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 610,
        "y": 440,
        "wires": [
            [
                "9afc7e0e1a1c3fb2"
            ]
        ]
    },
    {
        "id": "edc5bf9ff41cd5f4",
        "type": "mqtt in",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "topic": "Matlab_to_IED10/iphase1",
        "qos": "2",
        "datatype": "auto",
        "broker": "3abdb6fbc2437e51",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 610,
        "y": 500,
        "wires": [
            [
                "e23d81fb04bc71a6"
            ]
        ]
    },
    {
        "id": "869cf85e01ba13c2",
        "type": "mqtt in",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "topic": "Matlab_to_IED10/iphase2",
        "qos": "2",
        "datatype": "auto",
        "broker": "c1a3a17b7fb52573",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "fd15345a1a9616bb"
            ]
        ]
    },
    {
        "id": "19e7a6395a1644fa",
        "type": "mqtt in",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "topic": "Matlab_to_IED10/iphase3",
        "qos": "2",
        "datatype": "auto",
        "broker": "28dd6d951f6889f1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 610,
        "y": 620,
        "wires": [
            [
                "c5a528ef4baccdeb"
            ]
        ]
    },
    {
        "id": "cafb891dd96cf611",
        "type": "mqtt in",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "topic": "Matlab_to_IED10/freq",
        "qos": "2",
        "datatype": "auto",
        "broker": "a9109174f89c9db7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 600,
        "y": 680,
        "wires": [
            [
                "6f68b88c366e8905"
            ]
        ]
    },
    {
        "id": "4cb01a06c8bcd4f1",
        "type": "mqtt in",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "topic": "Matlab_to_IED10/voltage_N",
        "qos": "2",
        "datatype": "auto",
        "broker": "64d2a851e3b6ce54",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 620,
        "y": 740,
        "wires": [
            [
                "2c13797c1aaa0735"
            ]
        ]
    },
    {
        "id": "d50264b75abc2282",
        "type": "mqtt in",
        "z": "e2adb02dba7a3c70",
        "name": "",
        "topic": "Matlab_to_IED10/current_N",
        "qos": "2",
        "datatype": "auto",
        "broker": "39ca2212f01664f2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 620,
        "y": 800,
        "wires": [
            [
                "0e161631b481c70f"
            ]
        ]
    },
    {
        "id": "6c06b2601b18e781",
        "type": "inject",
        "z": "4348da95deeecf4f",
        "name": "create database table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "CREATE TABLE Input_data_ied10(TIMESTAMP TEXT NOT NULL,VOLTAGE1 INT NOT NULL, VOLTAGE2 INT NOT NULL,VOLTAGE3 INT NOT NULL,CURRENT1 INT NOT NULL, CURRENT2 INT NOT NULL, CURRENT3 INT NOT NULL, FREQUENCY INT NOT NULL, VOLTAGEN INT, CURRENTN INT, TOTAL_POWER INT NOT NULL)",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 140,
        "wires": [
            [
                "d948ca65df3075b3"
            ]
        ]
    },
    {
        "id": "77b66ef6d233f51d",
        "type": "debug",
        "z": "4348da95deeecf4f",
        "name": "database_out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 200,
        "wires": []
    },
    {
        "id": "3ad4cb5c45d72c82",
        "type": "inject",
        "z": "4348da95deeecf4f",
        "name": "delete records",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "DELETE FROM Input_data_ied10 WHERE TIMESTAMP>=0",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 200,
        "wires": [
            [
                "d948ca65df3075b3"
            ]
        ]
    },
    {
        "id": "93faeb2b3a4fa246",
        "type": "inject",
        "z": "4348da95deeecf4f",
        "name": "show RECORDS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "SELECT * FROM Input_data_ied10 ORDER BY TIMESTAMP DESC LIMIT 100",
        "payload": "",
        "payloadType": "date",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "5f155a0380014465"
            ]
        ]
    },
    {
        "id": "aba7cc1b8cdadc46",
        "type": "ui_template",
        "z": "4348da95deeecf4f",
        "group": "f6aaf33633b83f85",
        "name": "Database F8 IED10 IN",
        "order": 1,
        "width": "18",
        "height": "15",
        "format": "<style>\ntable, th, td\n{\n    height:10px;\n    width:900px;\n    background:lightblue;\n    border: 1px solid black;\n    border-collapse: collapse;\n}\n</style>\n<div class=\"table\">\n<table style=\"width:100%\">\n  <tr>\n    <th>TIMESTAMP</th>\n    <th>V1</th>\n    <th>V2</th>\n    <th>V3</th>\n    <th>I1</th>\n    <th>I2</th>\n    <th>I3</th>\n    <th>FREQ</th>\n    <th>VOLTAGEN</th>\n    <th>CURRENTN</th>\n    <th>TOTAL_POWER</th>\n  \n  </tr>\n  <tr ng-repeat=\"x in msg.payload\">\n    <td style=\"text-align:center\">{{msg.payload[$index].TIMESTAMP}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].VOLTAGE1}}</td> \n    <td style=\"text-align:center\">{{msg.payload[$index].VOLTAGE2}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].VOLTAGE3}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].CURRENT1}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].CURRENT2}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].CURRENT3}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].FREQUENCY}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].VOLTAGEN}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].CURRENTN}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].TOTAL_POWER}}</td>\n    \n  </tr>\n</table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 880,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d948ca65df3075b3",
        "type": "sqlite",
        "z": "4348da95deeecf4f",
        "mydb": "071915ed3352cb3f",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database F8 IED10 IN",
        "x": 660,
        "y": 200,
        "wires": [
            [
                "77b66ef6d233f51d"
            ]
        ]
    },
    {
        "id": "4583ce8dca2e3017",
        "type": "inject",
        "z": "4348da95deeecf4f",
        "name": "Test Data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 320,
        "wires": [
            [
                "5e9953fd5c9229f6"
            ]
        ]
    },
    {
        "id": "5e9953fd5c9229f6",
        "type": "function",
        "z": "4348da95deeecf4f",
        "name": "write query",
        "func": "var timestamp = new Date().toLocaleString();\ntimestamp=timestamp.substring(0, 20);\nvar voltage1=global.get(\"voltage1\");\nvar voltage2=global.get(\"voltage2\");\nvar voltage3=global.get(\"voltage3\");\nvar current1=global.get(\"current1\");\nvar current2=global.get(\"current2\");\nvar current3=global.get(\"current3\");\nvar frequency=global.get(\"Frequency\");\nvar voltageN=global.get(\"voltageN\");\nvar currentN=global.get(\"currentN\");\nvar total_power=global.get(\"total_power\");\n//put data into json string\n\nmsg=\"( timestamp,voltage1,voltage2,voltage3,current1,current2,current3,Frequency,voltageN,currentN,total_power) values(\\'\"+timestamp +\"\\',\" + voltage1 + \",\" + voltage2 +\",\" + voltage3 + \",\" + current1 + \",\" + current2 + \",\" + current3 + \",\" + frequency + \",\" + voltageN + \",\" + currentN + \",\" + total_power  + \")\";\nvar topic=\"INSERT INTO Input_data_ied10 \" +msg;\nvar msg1={};\nmsg1.topic=topic;\nmsg1.payload=timestamp;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 320,
        "wires": [
            [
                "2cdce085669f186d",
                "95ead2a66bfc666e"
            ]
        ]
    },
    {
        "id": "2cdce085669f186d",
        "type": "debug",
        "z": "4348da95deeecf4f",
        "name": "sql out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "5f155a0380014465",
        "type": "sqlite",
        "z": "4348da95deeecf4f",
        "mydb": "071915ed3352cb3f",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database F8 IED10 IN",
        "x": 660,
        "y": 80,
        "wires": [
            [
                "aba7cc1b8cdadc46"
            ]
        ]
    },
    {
        "id": "254b96b4431a784a",
        "type": "catch",
        "z": "4348da95deeecf4f",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 340,
        "y": 480,
        "wires": [
            [
                "39e11c1d893627bd",
                "c95057866b392818"
            ]
        ]
    },
    {
        "id": "39e11c1d893627bd",
        "type": "debug",
        "z": "4348da95deeecf4f",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 500,
        "wires": []
    },
    {
        "id": "44d41f1cbfa59f6c",
        "type": "ui_text",
        "z": "4348da95deeecf4f",
        "group": "3874591d96c90485",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 810,
        "y": 420,
        "wires": []
    },
    {
        "id": "c95057866b392818",
        "type": "function",
        "z": "4348da95deeecf4f",
        "name": "sql errors",
        "func": "var payload=msg.error.message;\nmsg.payload = payload +\" timestamp \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 420,
        "wires": [
            [
                "44d41f1cbfa59f6c"
            ]
        ]
    },
    {
        "id": "c48f4309736d3632",
        "type": "inject",
        "z": "4348da95deeecf4f",
        "name": "Drop Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "drop table Input_data_ied10",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 260,
        "wires": [
            [
                "d948ca65df3075b3"
            ]
        ]
    },
    {
        "id": "a63964b33f2ea751",
        "type": "function",
        "z": "4348da95deeecf4f",
        "name": "Clear errors",
        "func": "node.error(\"\",msg);//clear error\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "5be414d99cb6112b",
        "type": "inject",
        "z": "4348da95deeecf4f",
        "name": "clear errors",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 350,
        "y": 580,
        "wires": [
            [
                "a63964b33f2ea751"
            ]
        ]
    },
    {
        "id": "95ead2a66bfc666e",
        "type": "delay",
        "z": "4348da95deeecf4f",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 820,
        "y": 260,
        "wires": [
            [
                "d948ca65df3075b3"
            ]
        ]
    },
    {
        "id": "fb0c582366e4e3ff",
        "type": "inject",
        "z": "c70f7dc693087ccb",
        "name": "create database table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "CREATE TABLE output_data_ied9 (TIMESTAMP TEXT NOT NULL,CB2Status TEXT NOT NULL,CB2Event TEXT NOT NULL)",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 160,
        "wires": [
            [
                "b095ebc63f1a33c7"
            ]
        ]
    },
    {
        "id": "dc84bd14b0ec34d8",
        "type": "debug",
        "z": "c70f7dc693087ccb",
        "name": "database_out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 220,
        "wires": []
    },
    {
        "id": "98f9519ccd845e89",
        "type": "inject",
        "z": "c70f7dc693087ccb",
        "name": "delete records",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "DELETE FROM output_data_ied9 WHERE TIMESTAMP>=0",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "b095ebc63f1a33c7"
            ]
        ]
    },
    {
        "id": "472fef4cb6eff816",
        "type": "inject",
        "z": "c70f7dc693087ccb",
        "name": "show RECORDS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "SELECT * FROM output_data_ied9 ORDER BY TIMESTAMP DESC LIMIT 100",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 100,
        "wires": [
            [
                "0f9b18c61ab9e6df"
            ]
        ]
    },
    {
        "id": "0bc88bc1554017d4",
        "type": "ui_template",
        "z": "c70f7dc693087ccb",
        "group": "b1702c3f02043887",
        "name": "Database F8 IED10 OUT",
        "order": 1,
        "width": "18",
        "height": "15",
        "format": "<style>\ntable, th, td\n{\n    height:10px;\n    width:900px;\n    background:lightblue;\n    border: 1px solid black;\n    border-collapse: collapse;\n}\n</style>\n<div class=\"table\">\n<table style=\"width:100%\">\n  <tr>\n    <th>TIMESTAMP</th>\n    <th>F8CBStatus</th>\n    <th>F8CBEvent</th>\n    \n  </tr>\n  <tr ng-repeat=\"x in msg.payload\">\n    <td style=\"text-align:center\">{{msg.payload[$index].TIMESTAMP}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].F8CBStatus}}</td>\n    <td style=\"text-align:center\">{{msg.payload[$index].F8CBEvent}}</td>\n\n  </tr>\n</table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 830,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b095ebc63f1a33c7",
        "type": "sqlite",
        "z": "c70f7dc693087ccb",
        "mydb": "071915ed3352cb3f",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database F8 IED10 OUT",
        "x": 590,
        "y": 220,
        "wires": [
            [
                "dc84bd14b0ec34d8"
            ]
        ]
    },
    {
        "id": "2b616ced54c4aa98",
        "type": "inject",
        "z": "c70f7dc693087ccb",
        "name": "Test Data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 400,
        "wires": [
            [
                "312cbed7a9c1ab63"
            ]
        ]
    },
    {
        "id": "312cbed7a9c1ab63",
        "type": "function",
        "z": "c70f7dc693087ccb",
        "name": "write query",
        "func": "var timestamp = new Date().toLocaleString();\ntimestamp=timestamp.substring(0, 20);\nvar F8CBStatus=global.get(\"F8CBStatus\");\nvar F8CBEvent=global.get(\"F8CBEvent\");\n\n//put data into json string\n\nmsg=\"(timestamp,F8CBStatus,F8CBEvent) values(\\'\"+timestamp +\"\\',\\'\" + F8CBStatus + \"\\',\\'\" + F8CBEvent + \"\\')\";\nvar topic=\"INSERT INTO output_data_ied9 \" +msg;\nvar msg1={};\nmsg1.topic=topic;\nmsg1.payload=timestamp;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 400,
        "wires": [
            [
                "5d1d035640a30767",
                "c6967d3ad15eeb00"
            ]
        ]
    },
    {
        "id": "5d1d035640a30767",
        "type": "debug",
        "z": "c70f7dc693087ccb",
        "name": "sql out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 400,
        "wires": []
    },
    {
        "id": "0f9b18c61ab9e6df",
        "type": "sqlite",
        "z": "c70f7dc693087ccb",
        "mydb": "071915ed3352cb3f",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database F8 IED10 OUT",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "0bc88bc1554017d4"
            ]
        ]
    },
    {
        "id": "5d08fe4ca91abae2",
        "type": "catch",
        "z": "c70f7dc693087ccb",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 220,
        "y": 540,
        "wires": [
            [
                "28c726ae28fa93b6",
                "c4395a16298c0c63"
            ]
        ]
    },
    {
        "id": "28c726ae28fa93b6",
        "type": "debug",
        "z": "c70f7dc693087ccb",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 540,
        "wires": []
    },
    {
        "id": "e9a9170aad91864f",
        "type": "ui_text",
        "z": "c70f7dc693087ccb",
        "group": "3874591d96c90485",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 750,
        "y": 480,
        "wires": []
    },
    {
        "id": "c4395a16298c0c63",
        "type": "function",
        "z": "c70f7dc693087ccb",
        "name": "sql errors",
        "func": "var payload=msg.error.message;\nmsg.payload = payload +\" timestamp \"+msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 480,
        "wires": [
            [
                "e9a9170aad91864f"
            ]
        ]
    },
    {
        "id": "0f11f90196267b82",
        "type": "inject",
        "z": "c70f7dc693087ccb",
        "name": "Drop Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "drop table output_data_ied9 ",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 280,
        "wires": [
            [
                "b095ebc63f1a33c7"
            ]
        ]
    },
    {
        "id": "c6e36eac02dd00f0",
        "type": "function",
        "z": "c70f7dc693087ccb",
        "name": "Clear errors",
        "func": "node.error(\"\",msg);//clear error\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "cc765f26cecaa3de",
        "type": "inject",
        "z": "c70f7dc693087ccb",
        "name": "clear errors",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 230,
        "y": 620,
        "wires": [
            [
                "c6e36eac02dd00f0"
            ]
        ]
    },
    {
        "id": "c6967d3ad15eeb00",
        "type": "delay",
        "z": "c70f7dc693087ccb",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 760,
        "y": 340,
        "wires": [
            [
                "b095ebc63f1a33c7"
            ]
        ]
    },
    {
        "id": "4146bf53fbb3c6ce",
        "type": "mqtt in",
        "z": "c70f7dc693087ccb",
        "name": "",
        "topic": "IED10_to_CB/CB10_status",
        "qos": "2",
        "datatype": "auto",
        "broker": "8788b39e879497ec",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1050,
        "y": 180,
        "wires": [
            [
                "76f3af6032c6087e",
                "f42ecfd4ace65619"
            ]
        ]
    },
    {
        "id": "76f3af6032c6087e",
        "type": "function",
        "z": "c70f7dc693087ccb",
        "name": "",
        "func": "global.set('F8CBStatus', msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f42ecfd4ace65619",
        "type": "debug",
        "z": "c70f7dc693087ccb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 120,
        "wires": []
    },
    {
        "id": "02264645d089f6c1",
        "type": "modbus-flex-write",
        "z": "9d2563c1bcabbd8b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "server": "c92996cc0679e412",
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "x": 1230,
        "y": 500,
        "wires": [
            [
                "0f133a9a582756a3"
            ],
            []
        ]
    },
    {
        "id": "0f133a9a582756a3",
        "type": "debug",
        "z": "9d2563c1bcabbd8b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 460,
        "wires": []
    },
    {
        "id": "ddbd62fde1ac2258",
        "type": "comment",
        "z": "9d2563c1bcabbd8b",
        "name": "Sending all Values to SCADA for Monitoring",
        "info": "",
        "x": 310,
        "y": 200,
        "wires": []
    },
    {
        "id": "454c826d05869ab3",
        "type": "function",
        "z": "9d2563c1bcabbd8b",
        "name": "",
        "func": "msg.payload = { \n    value: msg.payload, \n    \n    'fc': 16, \n    'unitid': 10, \n    'address': 275 , \n    'quantity': 9 \n    \n} \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 580,
        "wires": [
            [
                "02264645d089f6c1",
                "d423f3b81cad7584"
            ]
        ]
    },
    {
        "id": "d423f3b81cad7584",
        "type": "debug",
        "z": "9d2563c1bcabbd8b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 600,
        "wires": []
    },
    {
        "id": "bbae90fd3f91ee2e",
        "type": "inject",
        "z": "9d2563c1bcabbd8b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 510,
        "y": 580,
        "wires": [
            [
                "ff8781434502e548"
            ]
        ]
    },
    {
        "id": "ff8781434502e548",
        "type": "function",
        "z": "9d2563c1bcabbd8b",
        "name": "Combine Values into Array",
        "func": "var a = global.get('voltage1');\nvar b = global.get('voltage2');\nvar c = global.get('voltage3');\nvar d = global.get('f8_current1');\nvar e = global.get('f8_current2');\nvar f = global.get('f8_current3');\nvar g = global.get('Frequency');\nvar h = global.get('voltageN');\nvar i = global.get('currentN');\n\nconst modbus = [a, b, c, d, e, f, g, h, i];\n\nmsg.payload = modbus;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 580,
        "wires": [
            [
                "454c826d05869ab3"
            ]
        ]
    }
]